{"version":3,"sources":["scripts/helper.js","scripts/process_golden_globes.js","scripts/process_oscars.js","scripts/process_additional_movie_data.js","scripts/process_imdb.js","scripts/preprocess_data.js","viz1-scripts/viz1-helper.js","viz1-scripts/viz1-legend.js","viz1-scripts/viz1-scales.js","viz1-scripts/viz1-tooltip.js","viz1-scripts/viz1-viz.js","../node_modules/d3-collection/src/map.js","../node_modules/d3-collection/src/nest.js","../node_modules/d3-collection/src/set.js","../node_modules/d3-collection/src/keys.js","../node_modules/d3-collection/src/values.js","../node_modules/d3-collection/src/entries.js","../node_modules/d3-collection/src/index.js","../node_modules/d3-tip/node_modules/d3-selection/src/namespaces.js","../node_modules/d3-tip/node_modules/d3-selection/src/namespace.js","../node_modules/d3-tip/node_modules/d3-selection/src/creator.js","../node_modules/d3-tip/node_modules/d3-selection/src/selector.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/select.js","../node_modules/d3-tip/node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-tip/node_modules/d3-selection/src/matcher.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-tip/node_modules/d3-selection/src/constant.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/data.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/join.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/order.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/call.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/node.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/size.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/each.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-tip/node_modules/d3-selection/src/window.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/style.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/property.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/text.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/html.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/append.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/on.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-tip/node_modules/d3-selection/src/selection/index.js","../node_modules/d3-tip/node_modules/d3-selection/src/select.js","../node_modules/d3-tip/node_modules/d3-selection/src/create.js","../node_modules/d3-tip/node_modules/d3-selection/src/local.js","../node_modules/d3-tip/node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-tip/node_modules/d3-selection/src/point.js","../node_modules/d3-tip/node_modules/d3-selection/src/mouse.js","../node_modules/d3-tip/node_modules/d3-selection/src/selectAll.js","../node_modules/d3-tip/node_modules/d3-selection/src/touch.js","../node_modules/d3-tip/node_modules/d3-selection/src/touches.js","../node_modules/d3-tip/node_modules/d3-selection/src/index.js","../node_modules/d3-tip/index.js","viz3-scripts/viz3-preprocess.js","viz3-scripts/viz3-helper.js","viz3-scripts/viz3-scales.js","viz3-scripts/viz3-legend.js","viz3-scripts/viz3-tooltip.js","viz3-scripts/viz3-example.js","viz4-scripts/viz4-helper.js","viz4-scripts/viz4-search.js","viz4-scripts/viz4-scales.js","viz4-scripts/viz4-process.js","viz4-scripts/viz4-viz.js","viz4-scripts/viz4-checkboxes.js","viz4-scripts/viz4-tooltip.js","index.js"],"names":["cleanMovieName","name","nameStr","String","articleMatch","match","concat","toLowerCase","replace","adjustForInflation","moneterayAmount","movieYear","topYear","nYears","i","Number","toFixed","parseRuntime","runtimeString","totalMins","hoursMatch","minutesMatch","parseInt","stopWords","exports","Set","convertMovieNamesToString","movies","forEach","movie","_helper","require","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_toPrimitive","toPrimitive","call","TypeError","getGoldenGlobesMovieData","goldenGlobes","movieNames","reduce","acc","item","cleanName","film","includes","isWinner","win","nominations","year","year_film","nominee","winner","nbNominations","nbWins","addGoldenGlobesData","imdb","goldenGlobesMovies","map","enhancedMovie","goldenGlobesData","goldenGlobesNominees","goldenGlobesNominations","goldenGlobesWins","getOscarsMovieData","oscars","addOscarsData","oscarMovies","oscarsData","oscarNominees","oscarNominations","oscarWins","getAdditionalMovieData","original_title","companies","production_companies","pCompaniesData","JSON","parse","Array","isArray","pCompany","Boolean","releaseDate","release_date","Date","toISOString","split","error","keywords","popularity","productionCompanies","budget","revenue","addAdditionalMovieData","additionalData","boxOffice","processMovieData","data","processedMovie","field","fieldName","trim","stringToArray","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","a","_arrayLikeToArray","toString","slice","from","test","n","l","u","f","next","done","return","MetricsHelper","standardMetrics","property","movieProperty","createMetricsObject","metricsObject","metric","charAt","toUpperCase","addMovieMetrics","currObject","totalProp","countProp","isNaN","calculateAverages","avgProp","cleanupMetricsProperties","findMostPopularGenre","genres","genreCounts","genre","maxCount","mostPopularGenre","entries","_ref","_ref2","count","getFilmContributorsData","contributors","casts","directors","writers","contributorCategories","movieInfo","_ref3","_ref4","categoryName","person","nMovies","category","getGenreDataIntervals","decades","createYearIntervals","decade","mostCommonGenre","allGenres","_MetricsHelper$findMo","intervalSize","undefined","minYear","min","MAX_VALUE","maxYear","max","MIN_VALUE","firstDecade","Math","floor","lastDecade","intervals","decadeYears","startYear","endYear","label","interval","find","getTopCollaborations","limit","allCollabs","countCollaborations","topActorDirectorCollabs","actorDirectorCollabs","topActorActorCollabs","actorActorCollabs","createCollabObject","isSameType","participant1","participant2","addMovieToCollab","collab","castMembers","actor","director","key","actor1","j","actor2","actorPair","sort","finalizeCollabs","collabs","values","b","getCertificateData","certificateData","certificateList","certificate","_MetricsHelper$findMo3","getDataBySeason","createSeasonObject","beginDate","endDate","seasons","spring","summer","fall","winter","season","dateString","_dateString$split$map2","num","month","day","monthDay","padStart","getSeason","_MetricsHelper$findMo4","getMovieLengthData","minRuntime","maxRuntime","runtime","run_time","firstInterval","lastInterval","minutes","startMinutes","endMinutes","movieRuntime","_MetricsHelper$findMo5","getTaglineWordsData","minWordLength","minOccurrences","wordCounts","tagline","word","has","significantWords","wordData","_MetricsHelper$findMo6","_ref5","_ref6","getTaglineLengthData","lengthMap","wordCount","_ref7","_ref8","avgWordCount","calculateMovieProfits","box_office","profit","getMoviesByGenre","genreData","genreName","generateG","svgSelector","margin","id","g","append","attr","left","top","setCanvasSize","width","height","d3","select","appendAxes","appendGraphLabels","text","drawXAxis","xScale","axisBottom","tickSizeOuter","tickArguments","drawYAxis","yScale","axisLeft","tickValues","tickFormat","format","placeTitle","drawButton","button","on","drawLegend","colorScale","selectAll","ticks","enter","d","legendBar","style","bubbleLegend","circleSizes","spacing","setRadiusScale","flatData","flat","minNominations","maxNominations","scaleLinear","domain","range","setColorScale","years","scaleSequential","interpolator","interpolateViridis","setXScale","minBO","maxBO","scaleLog","setYScale","rank","minRank","maxRank","getContents","boxOfficeFormatted","toLocaleString","totalNominations","positionLabels","drawCircles","rScale","cleanedData","moveCircles","transitionDuration","transition","duration","setCircleHoverHandler","tip","show","hide","setTitleText","prefix","Map","object","each","set","get","remove","clear","size","empty","_default","default","_map","_interopRequireDefault","__esModule","sortValues","rollup","nest","sortKeys","array","depth","createResult","setResult","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","v","k","order","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","__proto__","hasOwnProperty","proto","add","_nest","_set","_keys","_values","_entries","xhtml","svg","xlink","xml","xmlns","_namespaces","indexOf","namespaces","space","local","_namespace","creatorInherit","document","ownerDocument","uri","namespaceURI","documentElement","createElement","createElementNS","creatorFixed","fullname","namespace","none","selector","querySelector","_index","_selector","groups","_groups","m","subgroups","node","subnode","group","subgroup","__data__","Selection","_parents","querySelectorAll","_selectorAll","selectorAll","parents","matches","_matcher","matcher","update","_sparse","_enter","sparse","EnterNode","parent","datum","_next","_parent","appendChild","child","insertBefore","x","_constant","keyPrefix","bindIndex","exit","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","bind","constant","enterGroup","updateGroup","previous","i0","i1","_exit","onenter","onupdate","onexit","merge","selection","groups0","groups1","m0","m1","merges","group0","group1","compareDocumentPosition","parentNode","compare","compareNode","ascending","sortgroups","sortgroup","NaN","callback","nodes","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","getAttributeNS","getAttribute","defaultView","_window","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","contains","join","splice","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","firstChild","_creator","create","creator","constantNull","before","removeChild","selection_cloneShallow","clone","cloneNode","selection_cloneDeep","deep","filterEvents","event","element","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","related","relatedTarget","event1","event0","parseTypenames","typenames","type","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","that","args","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","_select","_selectAll","_filter","_data","_join","_merge","_order","_sort","_call","_nodes","_size","_empty","_each","_attr","_style","_property","_classed","_text","_html","_raise","_lower","_append","_insert","_remove","_clone","_datum","_on","_dispatch","root","selection_select","selection_selectAll","selection_filter","selection_data","selection_enter","selection_exit","selection_join","selection_merge","selection_order","selection_sort","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","classed","selection_classed","selection_text","html","selection_html","selection_raise","selection_lower","selection_append","insert","selection_insert","selection_remove","selection_clone","selection_datum","selection_on","dispatch","selection_dispatch","nextId","Local","_","source","current","ownerSVGElement","createSVGPoint","point","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","_sourceEvent","_point","changedTouches","touches","identifier","touch","points","_create","_local","_mouse","_touch","_touches","_d3Collection","_d3Selection","direction","offset","rootElement","body","initNode","target","vis","svgNode","tagName","SVGElement","pop","coords","content","poffset","dir","nodel","getNodeEl","directions","scrollTop","scrollLeft","directionCallbacks","functor","destroy","bbox","getScreenBBox","offsetHeight","offsetWidth","s","w","nw","ne","sw","se","div","targetShape","targetel","matrix","tbbox","getBBox","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_createForOfIteratorHelper","_n","F","getMovieLengthInterval","movieLength","interval_size","getDataPerTimeInterval","intervalsLenght","selectedMetric","_step","res","tmp","_iterator","_loop2","totalMetric","metricPerGenre","metricsPerMovieLenght","metricsPerCertificate","yearElem","ggNomination","oscarNomination","lengthInterval","err","_loop","res_elem","getMarketPerTimeInterval","intervalData","selectedFilter","_loop3","intervalElem","metricForfilter","minG","sum_genre_metric","val","minML","sum_lenght_metric","minC","sum_certificate_metric","reduceNumberOfLine","marketData","maxLines","_loop4","sortedGenres","topGenres","otherGenres","stackData","marketDataSmall","row","presentCategory","cat","tickStep","ceil","filteredTicks","scaleBand","padding","createLegend","viz3MarketPerIntervalSmall","legendDiv","setRectHoverHandler","selectRandomRectangle","rectangles","filteredRectangles","rectData","randomRect","random","proportion","console","log","phraseExemple","dataExample","partsOfInterval","margeG","initFilmList","filmArray","filmData","updateFilmList","searchTerm","films","timestamp","setYScaleBO","setYScaleMesureSucces","average","categories","scaleOrdinal","schemeSet2","getMoviesBySameField","movieName","targetMovie","targetValue","matchingMovies","some","sortedMovies","localeCompare","categorie","averageByYear","succesMesure","yearGroups","sum","parseFloat","noms","generateDataToDisplay","fields","minlength","dataToDisplay","str","indexData","referenceName","originalData","successMesure","validData","referenceValue","targetYear","mesureDeSucces","addNumberOfNominations","dataSource","_movie$goldenGlobesDa","_movie$goldenGlobesDa2","_movie$oscarsData$osc","_movie$oscarsData","total","numNominations","courbesElement","categoryGroups","line","parentGroup","hideShowCategory","categoryClass","currentOpacity","currentTarget","drawRef","title","xPos","yPos","generateCheckBoxes","isChecked","checked","legendesFiltrees","fontweight","checkAll","_process_golden_globes","_process_oscars","_process_additional_movie_data","_process_imdb","_preprocess_data","viz1Helper","viz1Legend","viz1Scales","viz1Tooltip","viz1Viz","_d3Tip","viz3Process","viz3Helper","viz3Scales","viz3Legend","viz3Tooltip","viz3Example","viz4Helper","viz4Search","viz4Scales","viz4Process","viz4Viz","viz4CheckBoxes","viz4Tooltip","chooseMetric","offsetTop","scrollY","Promise","all","csv","autoType","then","additionalMovieData","svgSize1","graphSize1","margin1","right","bottom","svgViz1","g1","d3Tip","radiusScale1","colorScale1","xScale1","yScale1","minDate","maxDate","rScale1","build1","buildViz3","metricViz3","selectedFilterViz3","intervalLenght","numElemPerStack","viz3","viz3Data","viz3MarketPerInterval","intervalsDates","stackedData","svgSizeViz3","marginViz3","graphSizeViz3","viz3xScale","viz3yScaleBoxOffice","axesViz3","g3","tip3","series","stack","bandwidth","randomRectData","phraseEx","selectorMetric","getElementById","selectorCategory","sliderMovieLenght","sliderMaxLine","sliderMovieLenghtValue","sliderMaxLineValue","svgSize4","graphSize4","margin4","viz4xScale","viz4yScaleBoxOffice","viz4ColorScale","ListOfFields","viz4FixedImdb","viz4","refreshViz4","viz4data","viz4mesureSucces","dataToShow","viz4yScaleFlexible","tip4","axes","buildViz4","viz4MesureSucces"],"mappings":"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","file":"src.f4f5bb1d.js","sourceRoot":"..\\src","sourcesContent":["\r\n// /**\r\n//  * Generates the SVG element g which will contain the data visualisation.\r\n//  *\r\n//  * @param {object} margin The desired margins around the graph\r\n//  * @returns {*} The d3 Selection for the created g element\r\n//  */\r\n// export function generateG (margin) {\r\n//   return d3.select('.graph')\r\n//     .select('svg')\r\n//     .append('g')\r\n//     .attr('id', 'graph-g')\r\n//     .attr('transform',\r\n//       'translate(' + margin.left + ',' + margin.top + ')')\r\n// }\r\n\r\n// /**\r\n//  * Sets the size of the SVG canvas containing the graph.\r\n//  *\r\n//  * @param {number} width The desired width\r\n//  * @param {number} height The desired height\r\n//  */\r\n// export function setCanvasSize (width, height) {\r\n//   d3.select('#heatmap').select('svg')\r\n//     .attr('width', width)\r\n//     .attr('height', height)\r\n// }\r\n\r\n// /**\r\n//  * Appends an SVG g element which will contain the axes.\r\n//  *\r\n//  * @param {*} g The d3 Selection of the graph's g SVG element\r\n//  */\r\n// export function appendAxes (g) {\r\n//   g.append('g')\r\n//     .attr('class', 'x axis')\r\n\r\n//   g.append('g')\r\n//     .attr('class', 'y axis')\r\n// }\r\n\r\n/**\r\n * Cleans the name to avoid mismatching during the comparison of movie names\r\n *\r\n * @param {string} name The movie name to clean\r\n * @returns {string} the cleaned movie name\r\n */\r\nexport function cleanMovieName(name) {\r\n  let nameStr = String(name)\r\n  const articlePattern = /^(.+),\\s+(The|A|An)$/i\r\n  const articleMatch = nameStr.match(articlePattern)\r\n\r\n  if (articleMatch) nameStr = `${articleMatch[2]} ${articleMatch[1]}`\r\n  return nameStr.toLowerCase().replace(/[^a-z0-9\\s]/g, '')\r\n}\r\n\r\n/**\r\n * Adjusts a monetary amount for inflation based on the year difference\r\n *\r\n * @param {number} moneterayAmount The original monetary amount to adjust\r\n * @param {number} movieYear The year of the original amount\r\n * @param {number} topYear The year to adjust the amount to\r\n * @returns {number} The inflation-adjusted amount, rounded to 2 decimal places\r\n */\r\nexport function adjustForInflation(moneterayAmount, movieYear, topYear) {\r\n  const nYears = topYear - movieYear\r\n  const inflationRate = 1 + (3.3 / 100)\r\n\r\n  for (let i = 0; i < nYears; i++) {\r\n    moneterayAmount *= inflationRate\r\n  }\r\n\r\n  return Number(moneterayAmount.toFixed(2))\r\n}\r\n\r\n/**\r\n * Parses a runtime string into total minutes\r\n *\r\n * @param {string} runtimeString A string representing the runtime in hours and/or minutes\r\n * @returns {number|null} The total runtime in minutes, or null if invalid input\r\n */\r\nexport function parseRuntime(runtimeString) {\r\n  if (!runtimeString || typeof runtimeString !== 'string') return null\r\n  let totalMins = 0\r\n\r\n  const hoursMatch = runtimeString.match(/(\\d+)h/)\r\n  const minutesMatch = runtimeString.match(/(\\d+)m/)\r\n\r\n  if (hoursMatch && hoursMatch[1]) totalMins += parseInt(hoursMatch[1], 10) * 60\r\n  if (minutesMatch && minutesMatch[1]) totalMins += parseInt(minutesMatch[1], 10)\r\n\r\n  return totalMins > 0 ? totalMins : null\r\n}\r\n\r\nexport const stopWords = new Set([\r\n  'about', 'after', 'again', 'against', 'all', 'also', 'and', 'any', 'are', 'because',\r\n  'been', 'before', 'being', 'between', 'both', 'but', 'can', 'cant', 'could', 'did', 'does',\r\n  'doing', 'dont', 'down', 'during', 'each', 'few', 'for', 'from', 'further', 'had', 'has',\r\n  'have', 'having', 'his', 'here', 'how', 'into', 'its', 'just', 'more', 'most', 'not', 'now', 'off',\r\n  'once', 'only', 'other', 'over', 'same', 'should', 'some', 'such', 'than', 'that',\r\n  'the', 'their', 'them', 'then', 'there', 'theres', 'these', 'they', 'this', 'those', 'through',\r\n  'too', 'under', 'until', 'very', 'was', 'were', 'what', 'when', 'where', 'which',\r\n  'while', 'who', 'whom', 'why', 'will', 'with', 'would', 'your'\r\n])\r\n\r\n/**\r\n * Converts all the movie names to string values\r\n *\r\n * @param {object} movies An object containing a list of the top 250 IMBD movies\r\n * @returns {object} A list of the top 250 IMDB movies with their names all being of type string\r\n */\r\nexport function convertMovieNamesToString(movies) {\r\n  movies.forEach(movie => {\r\n    if (typeof movie.name !== 'string') movie.name = String(movie.name)\r\n  })\r\n\r\n  return movies\r\n}\r\n","import { cleanMovieName } from './helper'\r\n\r\n/**\r\n * Gets the data for golden globes nominations for all the movies in the top 250 in IMDB\r\n *\r\n * @param {object[]} goldenGlobes The golden globes data to analyze\r\n * @param {object[]} movieNames The names of the top 250 movies on IMDB\r\n * @returns {object} The golden globes data of the top 250 movies on IMDB\r\n */\r\nexport function getGoldenGlobesMovieData (goldenGlobes, movieNames) {\r\n  return goldenGlobes.reduce((acc, item) => {\r\n    const cleanName = cleanMovieName(item.film)\r\n\r\n    if (movieNames.includes(cleanName)) {\r\n      const isWinner = item.win === 'True'\r\n      if (!acc[cleanName]) {\r\n        acc[cleanName] = {\r\n          nominations: [{ year: item.year_film, nominee: item.name, winner: isWinner }],\r\n          nbNominations: 1,\r\n          nbWins: isWinner ? 1 : 0\r\n        }\r\n      } else {\r\n        acc[cleanName].nominations.push({\r\n          year: item.year_film,\r\n          nominee: item.name,\r\n          winner: isWinner\r\n        })\r\n\r\n        acc[cleanName].nbNominations++\r\n        if (isWinner) acc[cleanName].nbWins++\r\n      }\r\n    }\r\n\r\n    return acc\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Add the data collected from the golden globes awards to the imdb data\r\n *\r\n * @param {object[]} imdb The data of the top 250 movies on IMDB\r\n * @param {object} goldenGlobesMovies The golden globes data of the movies in the top 250 on IMDB\r\n * @returns {object} The imdb data concatenated with the golden globes data\r\n */\r\nexport function addGoldenGlobesData (imdb, goldenGlobesMovies) {\r\n  return imdb.map(movie => {\r\n    const enhancedMovie = { ...movie }\r\n    const cleanName = cleanMovieName(movie.name)\r\n\r\n    enhancedMovie.goldenGlobesData = {\r\n      goldenGlobesNominees: goldenGlobesMovies[cleanName] ? goldenGlobesMovies[cleanName].nominations : [],\r\n      goldenGlobesNominations: goldenGlobesMovies[cleanName] ? goldenGlobesMovies[cleanName].nbNominations : 0,\r\n      goldenGlobesWins: goldenGlobesMovies[cleanName] ? goldenGlobesMovies[cleanName].nbWins : 0\r\n    }\r\n\r\n    return enhancedMovie\r\n  })\r\n}\r\n","import { cleanMovieName } from './helper'\r\n\r\n/**\r\n * Gets the data for oscar nominations for all the movies in the top 250 in IMDB\r\n *\r\n * @param {object[]} oscars The oscars data to analyze\r\n * @param {string[]} movieNames The names of the top 250 movies on IMDB\r\n * @returns {object} The oscars data of the top 250 movies on IMDB\r\n */\r\nexport function getOscarsMovieData (oscars, movieNames) {\r\n  return oscars.reduce((acc, item) => {\r\n    const cleanName = cleanMovieName(item.film)\r\n\r\n    if (movieNames.includes(cleanName)) {\r\n      const isWinner = item.winner === 'True'\r\n      if (!acc[cleanName]) {\r\n        acc[cleanName] = {\r\n          nominations: [{ year: item.year_film, nominee: item.name, winner: isWinner }],\r\n          nbNominations: 1,\r\n          nbWins: isWinner ? 1 : 0\r\n        }\r\n      } else {\r\n        acc[cleanName].nominations.push({\r\n          year: item.year_film,\r\n          nominee: item.name,\r\n          winner: isWinner\r\n        })\r\n\r\n        acc[cleanName].nbNominations++\r\n        if (isWinner) acc[cleanName].nbWins++\r\n      }\r\n    }\r\n\r\n    return acc\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Add the data collected from the oscars awards to the imdb data\r\n *\r\n * @param {object[]} imdb The data of the top 250 movies on IMDB\r\n * @param {object} oscarMovies The oscars data of the movies in the top 250 on IMDB\r\n * @returns {object} The imdb data concatenated with the oscars data\r\n */\r\nexport function addOscarsData (imdb, oscarMovies) {\r\n  return imdb.map(movie => {\r\n    const enhancedMovie = { ...movie }\r\n    const cleanName = cleanMovieName(movie.name)\r\n\r\n    enhancedMovie.oscarsData = {\r\n      oscarNominees: oscarMovies[cleanName] ? oscarMovies[cleanName].nominations : [],\r\n      oscarNominations: oscarMovies[cleanName] ? oscarMovies[cleanName].nbNominations : 0,\r\n      oscarWins: oscarMovies[cleanName] ? oscarMovies[cleanName].nbWins : 0\r\n    }\r\n\r\n    return enhancedMovie\r\n  })\r\n}\r\n","import { cleanMovieName } from './helper'\r\n\r\n/**\r\n * Gets the additional data required for all the movies in the top 250 in IMDB\r\n *\r\n * @param {object[]} movies The additional movie data to analyze\r\n * @param {object[]} movieNames The names of the top 250 movies on IMDB\r\n * @returns {object} The additonal movie data of the top 250 movies on IMDB\r\n */\r\nexport function getAdditionalMovieData (movies, movieNames) {\r\n  return movies.reduce((acc, movie) => {\r\n    if (!movie.original_title) return acc\r\n\r\n    const cleanName = cleanMovieName(movie.original_title)\r\n\r\n    if (movieNames.includes(cleanName)) {\r\n      let companies = []\r\n      if (movie.production_companies) {\r\n        const pCompaniesData = typeof movie.production_companies === 'string'\r\n          ? JSON.parse(movie.production_companies) : movie.production_companies\r\n\r\n        if (Array.isArray(pCompaniesData) && pCompaniesData.length > 0) {\r\n          companies = pCompaniesData.map(pCompany => pCompany.name).filter(Boolean)\r\n        }\r\n      }\r\n\r\n      let releaseDate = ''\r\n      if (movie.release_date) {\r\n        try {\r\n          releaseDate = new Date(movie.release_date).toISOString().split('T')[0]\r\n        } catch (error) {\r\n          releaseDate = movie.release_date\r\n        }\r\n      }\r\n\r\n      acc[cleanName] = {\r\n        keywords: movie.keywords || '',\r\n        popularity: movie.popularity || 0,\r\n        productionCompanies: companies,\r\n        releaseDate: releaseDate,\r\n        budget: movie.budget,\r\n        revenue: movie.revenue\r\n      }\r\n    }\r\n    return acc\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Add the additional movie data to the imdb data\r\n *\r\n * @param {object[]} imdb The data of the top 250 movies on IMDB\r\n * @param {object} additionalData The additional data of the movies in the top 250 on IMDB\r\n * @returns {object} The imdb data concatenated with the oscars data\r\n */\r\nexport function addAdditionalMovieData (imdb, additionalData) {\r\n  return imdb.map(movie => {\r\n    const enhancedMovie = { ...movie }\r\n    const cleanName = cleanMovieName(movie.name)\r\n\r\n    enhancedMovie.keywords = additionalData[cleanName] ? additionalData[cleanName].keywords : []\r\n    enhancedMovie.popularity = additionalData[cleanName] ? additionalData[cleanName].popularity : 0\r\n    enhancedMovie.productionCompanies = additionalData[cleanName] ? additionalData[cleanName].productionCompanies : {}\r\n    enhancedMovie.releaseDate = additionalData[cleanName] ? additionalData[cleanName].releaseDate : null\r\n\r\n    if (typeof enhancedMovie.budget === 'string' && additionalData[cleanName]) {\r\n      enhancedMovie.budget = additionalData[cleanName].budget\r\n    }\r\n\r\n    if (typeof enhancedMovie.boxOffice === 'string' && additionalData[cleanName]) {\r\n      enhancedMovie.boxOffice = additionalData[cleanName].revenue\r\n    }\r\n\r\n    return enhancedMovie\r\n  })\r\n}\r\n","/**\r\n * Fix the field values in order to proceed with processing\r\n *\r\n * @param {object[]} data The top 250 movies on IMDB\r\n * @returns {object} The correct value types for all the various fields of the data\r\n */\r\nexport function processMovieData (data) {\r\n  const stringToArray = (movie, fieldName) => {\r\n    if (!movie[fieldName]) return []\r\n\r\n    try {\r\n      if (typeof movie[fieldName] === 'string') {\r\n        return movie[fieldName].split(',').map(item => item.trim())\r\n      }\r\n      return movie[fieldName]\r\n    } catch (error) {\r\n      return []\r\n    }\r\n  }\r\n\r\n  return data.map((movie) => {\r\n    const processedMovie = { ...movie }\r\n    const fieldsToProcess = ['casts', 'directors', 'genre', 'writers']\r\n\r\n    fieldsToProcess.forEach(field => {\r\n      processedMovie[field] = stringToArray(movie, field)\r\n    })\r\n\r\n    return processedMovie\r\n  })\r\n}\r\n","import { stopWords, parseRuntime } from './helper'\r\n\r\n/**\r\n * Helper functions for metrics calculations (averages, quantity, etc)\r\n */\r\nconst MetricsHelper = {\r\n  standardMetrics: [\r\n    { property: 'rating', movieProperty: 'rating' },\r\n    { property: 'budget', movieProperty: 'budget' },\r\n    { property: 'boxOffice', movieProperty: 'box_office' },\r\n    { property: 'popularity', movieProperty: 'popularity' }\r\n  ],\r\n\r\n  /**\r\n   * Creates an object with new metrics with initialized properties for current standard metrics\r\n   *\r\n   * @returns {object} An object with total value and count properties for each of the standard metrics\r\n   */\r\n  createMetricsObject () {\r\n    const metricsObject = {}\r\n\r\n    this.standardMetrics.forEach(metric => {\r\n      metricsObject[`total${metric.property.charAt(0).toUpperCase() + metric.property.slice(1)}`] = 0\r\n      metricsObject[`${metric.property}Count`] = 0\r\n      metricsObject[`avg${metric.property.charAt(0).toUpperCase() + metric.property.slice(1)}`] = 0\r\n    })\r\n\r\n    return metricsObject\r\n  },\r\n\r\n  /**\r\n   * Adds the new metrics of a movie to an existing object\r\n   *\r\n   * @param {object} currObject The current object to which we will be adding the new metrics to\r\n   * @param {object} movie The movie object which contains the metric values required\r\n   * @returns {object} The updated current object with the new metrics\r\n   */\r\n  addMovieMetrics (currObject, movie) {\r\n    this.standardMetrics.forEach(metric => {\r\n      const value = movie[metric.movieProperty]\r\n      const totalProp = `total${metric.property.charAt(0).toUpperCase() + metric.property.slice(1)}`\r\n      const countProp = `${metric.property}Count`\r\n\r\n      if (typeof value === 'number' && !isNaN(value)) {\r\n        currObject[totalProp] += value\r\n        currObject[countProp]++\r\n      }\r\n    })\r\n\r\n    return currObject\r\n  },\r\n\r\n  /**\r\n   * Calculates the average values for all standard metrics of a given metrics object\r\n   *\r\n   * @param {object} currObject The metrics object to which we need to calculate the averages of the standard\r\n   * metrics for\r\n   * @returns {object} The metrics object with the calculated averages added to it\r\n   */\r\n  calculateAverages (currObject) {\r\n    this.standardMetrics.forEach(metric => {\r\n      const totalProp = `total${metric.property.charAt(0).toUpperCase() + metric.property.slice(1)}`\r\n      const countProp = `${metric.property}Count`\r\n      const avgProp = `avg${metric.property.charAt(0).toUpperCase() + metric.property.slice(1)}`\r\n\r\n      currObject[avgProp] = currObject[countProp] > 0 ? currObject[totalProp] / currObject[countProp] : 0\r\n    })\r\n\r\n    return currObject\r\n  },\r\n\r\n  /**\r\n   * Removes the temporary calculation properties, such as the total and count, from the current object\r\n   *\r\n   * @param {object} currObject The current object on which to remove the additional metrics\r\n   * @returns {object} The current cleaned metrics object\r\n   */\r\n  cleanupMetricsProperties (currObject) {\r\n    this.standardMetrics.forEach(metric => {\r\n      const totalProp = `total${metric.property.charAt(0).toUpperCase() + metric.property.slice(1)}`\r\n      const countProp = `${metric.property}Count`\r\n\r\n      delete currObject[totalProp]\r\n      delete currObject[countProp]\r\n    })\r\n\r\n    return currObject\r\n  },\r\n\r\n  /**\r\n   * Finds the most popular genre from an array of genres\r\n   *\r\n   * @param {string[]} genres Array of genre names\r\n   * @returns {object|null} Object containing most popular genre and counts\r\n   */\r\n  findMostPopularGenre (genres) {\r\n    if (!genres || !genres.length) return null\r\n\r\n    const genreCounts = {}\r\n    genres.forEach(genre => {\r\n      if (genre && genre.trim()) {\r\n        genreCounts[genre.trim()] = (genreCounts[genre.trim()] || 0) + 1\r\n      }\r\n    })\r\n\r\n    let maxCount = 0\r\n    let mostPopularGenre = null\r\n\r\n    Object.entries(genreCounts).forEach(([genre, count]) => {\r\n      if (count > maxCount) {\r\n        maxCount = count\r\n        mostPopularGenre = genre\r\n      }\r\n    })\r\n\r\n    return { mostPopularGenre, genreCounts }\r\n  }\r\n}\r\n\r\n/**\r\n * Gets important movie data associated to each contributor of the top 250 movies on IMDB\r\n * with additional statistics\r\n *\r\n * @param {object[]} movies The data of the movies\r\n * @returns {object} The casts, directors, and writers associated to the top 250 movies on IMDB\r\n */\r\nexport function getFilmContributorsData (movies) {\r\n  const contributors = {\r\n    casts: {},\r\n    directors: {},\r\n    writers: {}\r\n  }\r\n\r\n  const contributorCategories = {\r\n    casts: 'casts',\r\n    directors: 'directors',\r\n    writers: 'writers'\r\n  }\r\n\r\n  const createContributorObject = () => {\r\n    return {\r\n      movies: [],\r\n      nMovies: 0,\r\n      ...MetricsHelper.createMetricsObject()\r\n    }\r\n  }\r\n\r\n  movies.forEach(movie => {\r\n    const movieInfo = {\r\n      name: movie.name,\r\n      genre: movie.genre || []\r\n    }\r\n\r\n    Object.entries(contributorCategories).forEach(([movieProperty, categoryName]) => {\r\n      if (movie[movieProperty]) {\r\n        movie[movieProperty].forEach(person => {\r\n          if (!contributors[categoryName][person]) {\r\n            contributors[categoryName][person] = createContributorObject()\r\n          }\r\n\r\n          contributors[categoryName][person].movies.push({ ...movieInfo })\r\n          contributors[categoryName][person].nMovies = contributors[categoryName][person].movies.length\r\n\r\n          MetricsHelper.addMovieMetrics(contributors[categoryName][person], movie)\r\n        })\r\n      }\r\n    })\r\n  })\r\n\r\n  Object.keys(contributors).forEach(category => {\r\n    Object.keys(contributors[category]).forEach(person => {\r\n      const data = contributors[category][person]\r\n\r\n      MetricsHelper.calculateAverages(data)\r\n      MetricsHelper.cleanupMetricsProperties(data)\r\n    })\r\n  })\r\n\r\n  return contributors\r\n}\r\n\r\n/**\r\n * Analyzes genre data for movies across different time periods\r\n *\r\n * @param {object[]} movies Array of movie objects\r\n * @returns {object[]} Array of interval objects by a set of years with genre and movie analysis\r\n */\r\nexport function getGenreDataIntervals (movies) {\r\n  const decades = createYearIntervals(movies)\r\n\r\n  decades.forEach(decade => {\r\n    if (!decade.movies.length) {\r\n      decade.mostCommonGenre = null\r\n      decade.genreCounts = {}\r\n      return\r\n    }\r\n\r\n    const allGenres = []\r\n    decade.movies.forEach(movie => {\r\n      if (movie.genre && Array.isArray(movie.genre)) {\r\n        movie.genre.forEach(genre => {\r\n          if (genre && genre.trim()) allGenres.push(genre.trim())\r\n        })\r\n      }\r\n    })\r\n\r\n    const { mostPopularGenre, genreCounts } = MetricsHelper.findMostPopularGenre(allGenres)\r\n    decade.mostCommonGenre = mostPopularGenre\r\n    decade.genreCounts = genreCounts\r\n  })\r\n\r\n  return decades\r\n}\r\n\r\n/**\r\n * Creates time intervals for movies based on their release years\r\n *\r\n * @param {object[]} movies Array of movie objects\r\n * @param {number} intervalSize Size of each interval in years (10 by default)\r\n * @returns {object[]} Array of interval objects with movies and their metrics\r\n */\r\nexport function createYearIntervals (movies, intervalSize = 10) {\r\n  const minYear = movies.reduce((min, movie) => movie.year < min ? movie.year : min, Number.MAX_VALUE)\r\n  const maxYear = movies.reduce((max, movie) => movie.year > max ? movie.year : max, Number.MIN_VALUE)\r\n\r\n  const firstDecade = Math.floor(minYear / intervalSize) * intervalSize\r\n  const lastDecade = Math.floor(maxYear / intervalSize) * intervalSize\r\n\r\n  const intervals = []\r\n  for (let decade = firstDecade; decade <= lastDecade; decade += intervalSize) {\r\n    const decadeYears = decade + (intervalSize - 1)\r\n    intervals.push({\r\n      startYear: decade,\r\n      endYear: decadeYears,\r\n      label: `${decade}s`,\r\n      movies: [],\r\n      nMovies: 0,\r\n      genreCounts: {},\r\n      ...MetricsHelper.createMetricsObject()\r\n    })\r\n  }\r\n\r\n  movies.forEach(movie => {\r\n    const interval = intervals.find(interval => movie.year >= interval.startYear && movie.year <= interval.endYear)\r\n    if (!interval) return\r\n\r\n    interval.movies.push(movie)\r\n    interval.nMovies++\r\n\r\n    MetricsHelper.addMovieMetrics(interval, movie)\r\n  })\r\n\r\n  intervals.forEach(interval => {\r\n    MetricsHelper.calculateAverages(interval)\r\n    MetricsHelper.cleanupMetricsProperties(interval)\r\n  })\r\n\r\n  return intervals\r\n}\r\n\r\n/**\r\n * Gets the top collaborations for actor/director and actor/actor collaborations\r\n *\r\n * @param {Array} movies Array of movie objects\r\n * @param {number} limit Number of top collaborations to return (20 by default)\r\n * @returns {object} Object with the top actor/director and actor/actor collaborations\r\n */\r\nexport function getTopCollaborations (movies, limit = 20) {\r\n  const allCollabs = countCollaborations(movies)\r\n\r\n  return {\r\n    topActorDirectorCollabs: allCollabs.actorDirectorCollabs.slice(0, limit),\r\n    topActorActorCollabs: allCollabs.actorActorCollabs.slice(0, limit)\r\n  }\r\n}\r\n\r\n/**\r\n * Counts the amount of collaborations between actors and directors, and also between actors themselves\r\n *\r\n * @param {Array} movies Array of movie objects with casts and directors properties\r\n * @returns {object} Object containing actorDirectorCollabs and actorActorCollabs\r\n */\r\nfunction countCollaborations (movies) {\r\n  const actorDirectorCollabs = {}\r\n  const actorActorCollabs = {}\r\n\r\n  const createCollabObject = (isSameType, participant1, participant2) => {\r\n    return {\r\n      [isSameType ? 'actor1' : 'actor']: participant1,\r\n      [isSameType ? 'actor2' : 'director']: participant2,\r\n      movies: [],\r\n      genres: [],\r\n      mostPopularGenre: null,\r\n      count: 0,\r\n      ...MetricsHelper.createMetricsObject()\r\n    }\r\n  }\r\n\r\n  const addMovieToCollab = (collab, movie) => {\r\n    if (collab.movies.includes(movie.name)) return\r\n\r\n    collab.count++\r\n    collab.movies.push(movie.name)\r\n\r\n    MetricsHelper.addMovieMetrics(collab, movie)\r\n\r\n    if (movie.genre) {\r\n      const genres = Array.isArray(movie.genre) ? movie.genre : [movie.genre]\r\n      genres.forEach(genre => {\r\n        if (genre && genre.trim()) collab.genres.push(genre.trim())\r\n      })\r\n    }\r\n  }\r\n\r\n  movies.forEach(movie => {\r\n    const castMembers = movie.casts || []\r\n    const directors = movie.directors || []\r\n\r\n    castMembers.forEach(actor => {\r\n      if (!actor) return\r\n\r\n      directors.forEach(director => {\r\n        if (!director) return\r\n\r\n        const key = `${actor}/${director}`\r\n\r\n        if (!actorDirectorCollabs[key]) {\r\n          actorDirectorCollabs[key] = createCollabObject(false, actor, director)\r\n        }\r\n\r\n        addMovieToCollab(actorDirectorCollabs[key], movie)\r\n      })\r\n    })\r\n\r\n    for (let i = 0; i < castMembers.length; i++) {\r\n      const actor1 = castMembers[i]\r\n      if (!actor1) continue\r\n\r\n      for (let j = i + 1; j < castMembers.length; j++) {\r\n        const actor2 = castMembers[j]\r\n        if (!actor2) continue\r\n\r\n        const actorPair = [actor1, actor2].sort()\r\n        const key = `${actorPair[0]}/${actorPair[1]}`\r\n\r\n        if (!actorActorCollabs[key]) {\r\n          actorActorCollabs[key] = createCollabObject(true, actorPair[0], actorPair[1])\r\n        }\r\n\r\n        addMovieToCollab(actorActorCollabs[key], movie)\r\n      }\r\n    }\r\n  })\r\n\r\n  const finalizeCollabs = collabs => {\r\n    return Object.values(collabs).map(collab => {\r\n      MetricsHelper.calculateAverages(collab)\r\n\r\n      if (collab.genres.length) {\r\n        const { mostPopularGenre } = MetricsHelper.findMostPopularGenre(collab.genres)\r\n        collab.mostPopularGenre = mostPopularGenre\r\n      }\r\n\r\n      MetricsHelper.cleanupMetricsProperties(collab)\r\n      delete collab.genres\r\n\r\n      return collab\r\n    }).sort((a, b) => b.count - a.count)\r\n  }\r\n\r\n  return {\r\n    actorDirectorCollabs: finalizeCollabs(actorDirectorCollabs),\r\n    actorActorCollabs: finalizeCollabs(actorActorCollabs)\r\n  }\r\n}\r\n\r\n/**\r\n * Analyzes the movie data by the available certificate ratings\r\n *\r\n * @param {object[]} movies Array of movie objects\r\n * @returns {object} Object with certificate data and associated metrics\r\n */\r\nexport function getCertificateData (movies) {\r\n  const createCertificateObject = () => {\r\n    return {\r\n      movies: [],\r\n      count: 0,\r\n      genres: [],\r\n      mostPopularGenre: null,\r\n      ...MetricsHelper.createMetricsObject()\r\n    }\r\n  }\r\n\r\n  const certificateData = movies.reduce((certificateList, movie) => {\r\n    const certificate = typeof movie.certificate === 'string' ? movie.certificate.toLowerCase() : 'unknown'\r\n\r\n    if (!certificateList[certificate]) certificateList[certificate] = createCertificateObject()\r\n\r\n    certificateList[certificate].movies.push({ name: movie.name })\r\n    certificateList[certificate].count++\r\n\r\n    MetricsHelper.addMovieMetrics(certificateList[certificate], movie)\r\n\r\n    if (movie.genre) {\r\n      const genres = Array.isArray(movie.genre) ? movie.genre : [movie.genre]\r\n      genres.forEach(genre => {\r\n        if (genre && genre.trim()) certificateList[certificate].genres.push(genre.trim())\r\n      })\r\n    }\r\n\r\n    return certificateList\r\n  }, {})\r\n\r\n  Object.keys(certificateData).forEach(certificate => {\r\n    const data = certificateData[certificate]\r\n    MetricsHelper.calculateAverages(data)\r\n\r\n    if (data.genres.length) {\r\n      const { mostPopularGenre, genreCounts } = MetricsHelper.findMostPopularGenre(data.genres)\r\n      data.mostPopularGenre = mostPopularGenre\r\n      data.genreCounts = genreCounts\r\n    }\r\n\r\n    MetricsHelper.cleanupMetricsProperties(data)\r\n    delete data.genres\r\n  })\r\n\r\n  return certificateData\r\n}\r\n\r\n/**\r\n * Groups the movie data by seasons (summer, fall, winter, spring) based on release dates\r\n *\r\n * @param {object[]} movies Array of movie objects\r\n * @returns {object} Object with movie data organized by season and their associated metrics\r\n */\r\nexport function getDataBySeason (movies) {\r\n  const createSeasonObject = (beginDate, endDate) => ({\r\n    beginDate,\r\n    endDate,\r\n    movies: [],\r\n    count: 0,\r\n    genres: [],\r\n    mostPopularGenre: null,\r\n    ...MetricsHelper.createMetricsObject()\r\n  })\r\n\r\n  const seasons = {\r\n    spring: createSeasonObject('03-20', '06-20'),\r\n    summer: createSeasonObject('06-21', '09-22'),\r\n    fall: createSeasonObject('09-23', '12-20'),\r\n    winter: createSeasonObject('12-21', '03-19')\r\n  }\r\n\r\n  const getSeason = (dateString) => {\r\n    if (!dateString || typeof dateString !== 'string') return null\r\n\r\n    // Reason : We need to split the string, however year is not required for use\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [year, month, day] = dateString.split('-').map(num => parseInt(num, 10))\r\n    const monthDay = `${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`\r\n\r\n    if (monthDay >= '03-20' && monthDay <= '06-20') return 'spring'\r\n    else if (monthDay >= '06-21' && monthDay <= '09-22') return 'summer'\r\n    else if (monthDay >= '09-23' && monthDay <= '12-20') return 'fall'\r\n    else return 'winter'\r\n  }\r\n\r\n  movies.forEach(movie => {\r\n    const season = getSeason(movie.releaseDate)\r\n    if (season === null) return\r\n\r\n    seasons[season].movies.push(movie)\r\n    seasons[season].count++\r\n\r\n    MetricsHelper.addMovieMetrics(seasons[season], movie)\r\n\r\n    if (movie.genre) {\r\n      const genres = Array.isArray(movie.genre) ? movie.genre : [movie.genre]\r\n      genres.forEach(genre => {\r\n        if (genre && genre.trim()) seasons[season].genres.push(genre.trim())\r\n      })\r\n    }\r\n  })\r\n\r\n  Object.keys(seasons).forEach(season => {\r\n    const data = seasons[season]\r\n    MetricsHelper.calculateAverages(data)\r\n\r\n    if (data.genres.length) {\r\n      const { mostPopularGenre, genreCounts } = MetricsHelper.findMostPopularGenre(data.genres)\r\n      data.mostPopularGenre = mostPopularGenre\r\n      data.genreCounts = genreCounts\r\n    }\r\n\r\n    MetricsHelper.cleanupMetricsProperties(data)\r\n    delete data.genres\r\n  })\r\n\r\n  return seasons\r\n}\r\n\r\n/**\r\n * Groups and analyzes movies by given runtime length intervals\r\n *\r\n * @param {object[]} movies Array of movie objects\r\n * @param {number} intervalSize Size of each runtime interval in minutes (10 by default)\r\n * @returns {object[]} Array of runtime interval objects with their associated movies and metrics\r\n */\r\nexport function getMovieLengthData (movies, intervalSize = 10) {\r\n  let minRuntime = Number.MAX_VALUE\r\n  let maxRuntime = 0\r\n\r\n  movies.forEach(movie => {\r\n    const runtime = parseRuntime(movie.run_time)\r\n    if (runtime) {\r\n      minRuntime = Math.min(minRuntime, runtime)\r\n      maxRuntime = Math.max(maxRuntime, runtime)\r\n    }\r\n  })\r\n\r\n  const firstInterval = Math.floor(minRuntime / intervalSize) * intervalSize\r\n  const lastInterval = Math.floor(maxRuntime / intervalSize) * intervalSize\r\n\r\n  const intervals = []\r\n  for (let minutes = firstInterval; minutes <= lastInterval; minutes += intervalSize) {\r\n    intervals.push({\r\n      startMinutes: minutes,\r\n      endMinutes: minutes + (intervalSize - 1),\r\n      label: `${minutes}s`,\r\n      movies: [],\r\n      nMovies: 0,\r\n      genres: [],\r\n      ...MetricsHelper.createMetricsObject()\r\n    })\r\n  }\r\n\r\n  movies.forEach(movie => {\r\n    const movieRuntime = parseRuntime(movie.run_time)\r\n    const interval = intervals.find(interval => movieRuntime >= interval.startMinutes && movieRuntime <= interval.endMinutes)\r\n    if (!interval) return\r\n\r\n    interval.movies.push(movie)\r\n    interval.nMovies++\r\n\r\n    MetricsHelper.addMovieMetrics(interval, movie)\r\n\r\n    if (movie.genre) {\r\n      const genres = Array.isArray(movie.genre) ? movie.genre : [movie.genre]\r\n      genres.forEach(genre => {\r\n        if (genre && genre.trim()) interval.genres.push(genre.trim())\r\n      })\r\n    }\r\n  })\r\n\r\n  intervals.forEach(interval => {\r\n    MetricsHelper.calculateAverages(interval)\r\n\r\n    if (interval.genres.length) {\r\n      const { mostPopularGenre, genreCounts } = MetricsHelper.findMostPopularGenre(interval.genres)\r\n      interval.mostPopularGenre = mostPopularGenre\r\n      interval.genreCounts = genreCounts\r\n    }\r\n\r\n    MetricsHelper.cleanupMetricsProperties(interval)\r\n    delete interval.genres\r\n  })\r\n\r\n  return intervals\r\n}\r\n\r\n/**\r\n * Analyzes the frequency of appearance for words and associated data in movie taglines\r\n *\r\n * @param {object[]} movies Array of movie objects\r\n * @param {number} minWordLength Minimum length of words to include (3 by default)\r\n * @param {number} minOccurrences Minimum occurrences of words to include (2 by default)\r\n * @returns {object[]} Array of word objects with associated movie data and their metrics\r\n */\r\nexport function getTaglineWordsData (movies, minWordLength = 3, minOccurrences = 2) {\r\n  const createWordObject = () => {\r\n    return {\r\n      movies: [],\r\n      count: 0,\r\n      genres: [],\r\n      mostPopularGenre: null,\r\n      ...MetricsHelper.createMetricsObject()\r\n    }\r\n  }\r\n\r\n  const wordCounts = {}\r\n  movies.forEach(movie => {\r\n    if (!movie.tagline || typeof movie.tagline !== 'string') return\r\n\r\n    const words = movie.tagline\r\n      .toLowerCase()\r\n      .replace(/[^\\w\\s]/g, '')\r\n      .split(/\\s+/)\r\n      .filter(word =>\r\n        word.length >= minWordLength &&\r\n        !stopWords.has(word)\r\n      )\r\n\r\n    words.forEach(word => {\r\n      if (!wordCounts[word]) wordCounts[word] = 0\r\n      wordCounts[word]++\r\n    })\r\n  })\r\n\r\n  const significantWords = Object.keys(wordCounts)\r\n    .filter(word => wordCounts[word] >= minOccurrences)\r\n\r\n  const wordData = {}\r\n  significantWords.forEach(word => {\r\n    wordData[word] = createWordObject()\r\n  })\r\n\r\n  movies.forEach(movie => {\r\n    if (!movie.tagline || typeof movie.tagline !== 'string') return\r\n\r\n    const movieWords = new Set(\r\n      movie.tagline\r\n        .toLowerCase()\r\n        .replace(/[^\\w\\s]/g, '')\r\n        .split(/\\s+/)\r\n        .filter(word => significantWords.includes(word))\r\n    )\r\n\r\n    movieWords.forEach(word => {\r\n      wordData[word].movies.push({\r\n        name: movie.name,\r\n        year: movie.year,\r\n        tagline: movie.tagline\r\n      })\r\n\r\n      wordData[word].count++\r\n\r\n      MetricsHelper.addMovieMetrics(wordData[word], movie)\r\n\r\n      if (movie.genre) {\r\n        const genres = Array.isArray(movie.genre) ? movie.genre : [movie.genre]\r\n        genres.forEach(genre => {\r\n          if (genre && genre.trim()) wordData[word].genres.push(genre.trim())\r\n        })\r\n      }\r\n    })\r\n  })\r\n\r\n  Object.keys(wordData).forEach(word => {\r\n    const data = wordData[word]\r\n    MetricsHelper.calculateAverages(data)\r\n\r\n    if (data.genres.length) {\r\n      const { mostPopularGenre, genreCounts } = MetricsHelper.findMostPopularGenre(data.genres)\r\n      data.mostPopularGenre = mostPopularGenre\r\n      data.genreCounts = genreCounts\r\n    }\r\n\r\n    MetricsHelper.cleanupMetricsProperties(data)\r\n    delete data.genres\r\n  })\r\n\r\n  const result = Object.entries(wordData)\r\n    .map(([word, data]) => ({\r\n      word,\r\n      ...data\r\n    }))\r\n    .sort((a, b) => b.count - a.count)\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Analyzes the tagline length statistics and metrics for movies\r\n *\r\n * @param {object[]} movies Array of movie objects\r\n * @returns {object[]} Array of tagline length objects with associated movie data and metrics\r\n */\r\nexport function getTaglineLengthData (movies) {\r\n  const lengthMap = {}\r\n\r\n  const createLengthObject = () => {\r\n    return {\r\n      movies: [],\r\n      count: 0,\r\n      wordCount: 0,\r\n      ...MetricsHelper.createMetricsObject()\r\n    }\r\n  }\r\n\r\n  movies.forEach(movie => {\r\n    if (!movie.tagline || typeof movie.tagline !== 'string') return\r\n\r\n    const tagline = movie.tagline.trim()\r\n    if (tagline.length === 0) return\r\n\r\n    const length = tagline.length\r\n\r\n    if (!lengthMap[length]) lengthMap[length] = createLengthObject()\r\n    lengthMap[length].movies.push({\r\n      name: movie.name,\r\n      year: movie.year,\r\n      tagline: movie.tagline\r\n    })\r\n    lengthMap[length].count++\r\n\r\n    const wordCount = tagline.split(/\\s+/).length\r\n\r\n    lengthMap[length].wordCount += wordCount\r\n    MetricsHelper.addMovieMetrics(lengthMap[length], movie)\r\n  })\r\n\r\n  const result = Object.entries(lengthMap).map(([length, data]) => {\r\n    MetricsHelper.calculateAverages(data)\r\n\r\n    data.avgWordCount = data.wordCount / data.count\r\n    delete data.wordCount\r\n\r\n    MetricsHelper.cleanupMetricsProperties(data)\r\n    delete data.genres\r\n\r\n    return {\r\n      length: parseInt(length, 10),\r\n      ...data\r\n    }\r\n  })\r\n\r\n  return result.sort((a, b) => a.length - b.length)\r\n}\r\n\r\n/**\r\n * Calculates the profit for each movie based on budget and box office data\r\n *\r\n * @param {object[]} imdb Array of movie objects\r\n * @returns {object[]} Array of movie objects with added profit property\r\n */\r\nexport function calculateMovieProfits (imdb) {\r\n  imdb.forEach(movie => {\r\n    if (movie.budget && movie.box_office && typeof movie.budget !== 'string' && typeof movie.box_office !== 'string') {\r\n      movie.profit = movie.box_office - movie.budget\r\n    }\r\n  })\r\n\r\n  return imdb\r\n}\r\n\r\n/**\r\n * Groups and analyzes movies by their genres\r\n *\r\n * @param {object[]} movies Array of movie objects\r\n * @returns {object} Object with the genre data and associated movie metrics\r\n */\r\nexport function getMoviesByGenre (movies) {\r\n  const genreData = {}\r\n\r\n  movies.forEach(movie => {\r\n    const genres = []\r\n\r\n    if (movie.genre) {\r\n      if (Array.isArray(movie.genre)) {\r\n        for (let i = 0; i < movie.genre.length; i++) {\r\n          if (movie.genre[i] && typeof movie.genre[i] === 'string') {\r\n            genres.push(movie.genre[i].trim())\r\n          }\r\n        }\r\n      } else if (typeof movie.genre === 'object') {\r\n        Object.keys(movie.genre).forEach(key => {\r\n          if (movie.genre[key] && typeof movie.genre[key] === 'string') {\r\n            genres.push(movie.genre[key].trim())\r\n          }\r\n        })\r\n      } else if (typeof movie.genre === 'string') genres.push(movie.genre.trim())\r\n    }\r\n\r\n    genres.forEach(genreName => {\r\n      if (!genreData[genreName]) {\r\n        genreData[genreName] = {\r\n          movies: [],\r\n          count: 0,\r\n          ...MetricsHelper.createMetricsObject()\r\n        }\r\n      }\r\n\r\n      genreData[genreName].movies.push(movie)\r\n      genreData[genreName].count++\r\n\r\n      MetricsHelper.addMovieMetrics(genreData[genreName], movie)\r\n    })\r\n  })\r\n\r\n  Object.keys(genreData).forEach(genre => {\r\n    MetricsHelper.calculateAverages(genreData[genre])\r\n    MetricsHelper.cleanupMetricsProperties(genreData[genre])\r\n  })\r\n\r\n  return genreData\r\n}\r\n","/**\r\n * Generates a specific <g> container inside a given SVG container.\r\n *\r\n * @param {string} svgSelector The selector of the SVG container (e.g. \".viz1-svg\" or \".film-impact-svg\")\r\n * @param {object} margin The desired margins around the graph\r\n * @param {string} id Optional ID or class for the <g> container\r\n * @returns {*} The d3 Selection for the created g element\r\n */\r\nexport function generateG (svgSelector, margin, id = null) {\r\n  const g = svgSelector\r\n    .append('g')\r\n    .attr('transform', `translate(${margin.left},${margin.top})`);\r\n  \r\n  if (id) {\r\n    g.attr('id', id);\r\n  }\r\n\r\n  return g;\r\n}\r\n\r\n/**\r\n * Sets the size of the SVG canvas containing the graph.\r\n *\r\n * @param {number} width The desired width\r\n * @param {number} height The desired height\r\n */\r\nexport function setCanvasSize (width, height) {\r\n  d3.select('.success-scatter-svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n}\r\n\r\n/**\r\n * Appends an SVG g element which will contain the axes.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n */\r\nexport function appendAxes (g) {\r\n  g.append('g')\r\n    .attr('class', 'x1 axis')\r\n\r\n  g.append('g')\r\n    .attr('class', 'y1 axis')\r\n}\r\n/**\r\n * Appends the labels for the the y axis and the title of the graph.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n */\r\nexport function appendGraphLabels (g) {\r\n  g.append('text')\r\n    .text('Classement')\r\n    .attr('class', 'y1 axis-text')\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -30)  // Plus négatif = plus bas (le long de l'axe Y)\r\n    .attr('y', 13)    // Plus petit = plus proche de l'axe Y\r\n    .attr('font-size', 12);\r\n\r\n    g.append('text')\r\n    .text('Box-office (en $)')\r\n    .attr('class', 'x1 axis-text')\r\n    .attr('x', -40)   // À ajuster selon la largeur de ton graphe\r\n    .attr('y', 0)   // À ajuster selon la hauteur\r\n    .attr('font-size', 12);\r\n}\r\n\r\n/**\r\n * Draws the X axis at the bottom of the diagram.\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n * @param {*} xScale The scale to use to draw the axis\r\n * @param {number} height The height of the graphic\r\n */\r\nexport function drawXAxis (g, xScale, height) {\r\n  g.select('.x1.axis')\r\n    .attr('transform', 'translate(0,' + height + ')')\r\n    .call(d3.axisBottom(xScale).tickSizeOuter(0).tickArguments([5, '~s']));\r\n}\r\n\r\n/**\r\n * Draws the Y axis to the left of the diagram.\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n * @param {*} yScale The scale to use to draw the axis\r\n */\r\nexport function drawYAxis (g, yScale) {\r\n  g.select('.y1.axis')\r\n    .call(d3.axisLeft(yScale)\r\n      .tickSizeOuter(0)\r\n      .tickValues([1, 50, 100, 150, 200, 250])  // ou tout autre intervalle clair\r\n      .tickFormat(d3.format('d'))  // évite les arrondis foireux\r\n  );\r\n}\r\n\r\n/**\r\n * Places the graph's title.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n */\r\nexport function placeTitle (g) {\r\n  g.append('text')\r\n    .attr('class', 'title1')\r\n    .attr('x1', 0)\r\n    .attr('y1', -20)\r\n    .attr('font-size', 14)\r\n}\r\n\r\n/**\r\n * Draws the button to toggle the display year.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n * @param {number} year The year to display\r\n * @param {number} width The width of the graph, used to place the button\r\n */\r\nexport function drawButton (g, year, width) {\r\n  const button = g.append('g')\r\n    .attr('class', 'button1')\r\n    .attr('transform', 'translate(' + width + ', 140)')\r\n    .attr('width', 130)\r\n    .attr('height', 25)\r\n\r\n  button.append('rect')\r\n    .attr('width', 130)\r\n    .attr('height', 30)\r\n    .attr('fill', '#f4f6f4')\r\n    .on('mouseenter', function () {\r\n      d3.select(this).attr('stroke', '#362023')\r\n    })\r\n    .on('mouseleave', function () {\r\n      d3.select(this).attr('stroke', '#f4f6f4')\r\n    })\r\n\r\n  button.append('text')\r\n    .attr('x1', 65)\r\n    .attr('y1', 15)\r\n    .attr('text-anchor', 'middle')\r\n    .attr('dominant-baseline', 'middle')\r\n    .attr('class', 'button-text1')\r\n    .text('See ' + year + ' dataset')\r\n    .attr('font-size', '10px')\r\n    .attr('fill', '#362023')\r\n}\r\n","/**\r\n * Draws a color gradient legend as a horizontal bar with year labels.\r\n *\r\n * @param {*} colorScale The color scale to use (d3.scaleSequential)\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n * @param {number} width The width of the graph, used to place the legend\r\n * @param {number} height The height for the legend (bar height)\r\n * @param {number} minYear The minimum year value\r\n * @param {number} maxYear The maximum year value\r\n */\r\nexport function drawLegend(colorScale, g, width, height, minYear, maxYear) {\r\n  // Create the gradient\r\n  const defs = g.append(\"defs\");\r\n\r\n  const gradient = defs.append(\"linearGradient\")\r\n    .attr(\"id\", \"gradient\")\r\n    .attr(\"x1\", \"0%\")\r\n    .attr(\"x2\", \"0%\")\r\n    .attr(\"y1\", \"100%\")\r\n    .attr(\"y2\", \"0%\");\r\n\r\n  // Define the gradient stops based on the color scale\r\n  gradient.selectAll(\"stop\")\r\n    .data(colorScale.ticks(10))  // Divide into 10 intervals\r\n    .enter().append(\"stop\")\r\n    .attr(\"offset\", (d, i) => `${(i / 10) * 100}%`)\r\n    .attr(\"stop-color\", d => colorScale(d));\r\n\r\n  // Append a rectangle to display the gradient\r\n  const legendBar = g.append(\"g\")\r\n    .attr(\"transform\", `translate(${width + 60}, 60)`);  // Position of the legend\r\n\r\n  legendBar.append(\"rect\")\r\n    .attr(\"width\", width / 30)\r\n    .attr(\"height\", height * 0.7)\r\n    .style(\"fill\", \"url(#gradient)\");\r\n\r\n  // Add min and max year labels\r\n  legendBar.append(\"text\")\r\n    .attr(\"x\", 13)\r\n    .attr(\"y\", height-100)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .text(minYear);\r\n\r\n  legendBar.append(\"text\")\r\n    .attr(\"x\", 11)\r\n    .attr(\"y\", height - 440)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .text(maxYear);\r\n  \r\n    // === BUBBLE LEGEND ===\r\n  const bubbleLegend = g.append(\"g\")\r\n    .attr(\"transform\", `translate(${width + 130}, 140)`); // position ajustable\r\n\r\n  const circleSizes = [20, 14, 9, 4]; // rayons\r\n  const spacing = 50;\r\n  const startY = 0;\r\n\r\n  circleSizes.forEach((r, i) => {\r\n    bubbleLegend.append(\"circle\")\r\n      .attr(\"cx\", 0)\r\n      .attr(\"cy\", startY + i * spacing)\r\n      .attr(\"r\", r)\r\n      .attr(\"fill\", \"black\");\r\n  });\r\n\r\n  // Flèche verticale\r\n  bubbleLegend.append(\"defs\").append(\"marker\")\r\n    .attr(\"id\", \"arrow-head\")\r\n    .attr(\"viewBox\", \"0 0 10 10\")\r\n    .attr(\"refX\", 5)\r\n    .attr(\"refY\", 5)\r\n    .attr(\"markerWidth\", 6)\r\n    .attr(\"markerHeight\", 6)\r\n    .attr(\"orient\", \"auto\")\r\n    .append(\"path\")\r\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\r\n    .attr(\"fill\", \"black\");\r\n\r\n  bubbleLegend.append(\"line\")\r\n    .attr(\"x1\", 30)\r\n    .attr(\"y1\", spacing * (circleSizes.length - 1) + 20)\r\n    .attr(\"x2\", 30)\r\n    .attr(\"y2\", -20)\r\n    .attr(\"stroke\", \"black\")\r\n    .attr(\"stroke-width\", 2)\r\n    .attr(\"marker-end\", \"url(#arrow-head)\");\r\n\r\n  const textLines = [\"Nominations\", \"(Oscars et\", \"Golden Globes)\"];\r\n\r\n  const text = bubbleLegend.append(\"text\")\r\n    .attr(\"x\", 40)\r\n    .attr(\"y\", spacing * 1.5)\r\n    .attr(\"text-anchor\", \"start\")\r\n    .style(\"font-family\", \"sans-serif\")\r\n    .style(\"font-size\", \"12px\");\r\n  \r\n  text.selectAll(\"tspan\")\r\n    .data(textLines)\r\n    .enter()\r\n    .append(\"tspan\")\r\n    .attr(\"x\", 40)\r\n    .attr(\"dy\", (d, i) => i === 0 ? \"0em\" : \"1.2em\")\r\n    .text(d => d);\r\n  }\r\n","/**\r\n * Defines the scale to use for the circle markers' radius.\r\n *\r\n * The radius is linearly proportional to the total number of nominations.\r\n * (Oscars + Golden Globes), in the interval [5, 20].\r\n *\r\n * @param {object} data The data to be displayed\r\n * @returns {*} The linear scale used to determine the radius\r\n */\r\nexport function setRadiusScale (data) {\r\n  const flatData = Object.values(data).flat();\r\n\r\n  const minNominations = d3.min(flatData, d =>\r\n    (d.oscarsData.oscarNominations + d.goldenGlobesData.goldenGlobesNominations)\r\n  );\r\n\r\n  const maxNominations = d3.max(flatData, d =>\r\n    (d.oscarsData.oscarNominations + d.goldenGlobesData.goldenGlobesNominations)\r\n  );\r\n\r\n  return d3.scaleLinear()\r\n    .domain([minNominations, maxNominations])\r\n    .range([5, 15]);\r\n}\r\n\r\n/**\r\n * Defines the color scale based on release year.\r\n * @param data\r\n * @returns {*}\r\n */\r\nexport function setColorScale(data) {\r\n  const flatData = Object.values(data).flat();\r\n\r\n  const years = flatData.map(d => d.year);\r\n  const minYear = d3.min(years);\r\n  const maxYear = d3.max(years);\r\n\r\n  return d3.scaleSequential()\r\n    .domain([minYear, maxYear])\r\n    .interpolator(d3.interpolateViridis); // interpolatePlasma ou interpolateViridis\r\n}\r\n\r\n/**\r\n * Defines the linear scale in X (Box Office).\r\n *\r\n * @param {number} width The width of the graph\r\n * @param {object} data The data to be used\r\n * @returns {*} The linear scale in X\r\n */\r\nexport function setXScale (width, data) {\r\n  const flatData = Object.values(data).flat()\r\n    .filter(d => d.box_office !== \"Not Available\" && !isNaN(d.box_office));\r\n\r\n  const minBO = d3.min(flatData, d => +d.box_office);\r\n  const maxBO = d3.max(flatData, d => +d.box_office);\r\n\r\n  return d3.scaleLog()\r\n    .domain([minBO, maxBO])\r\n    .range([0, width]);\r\n}\r\n\r\n/**\r\n * Defines the linear scale in Y (rank), inverted.\r\n *\r\n * @param {number} height The height of the graph\r\n * @param {object} data The data to be used\r\n * @returns {*} The linear scale in Y\r\n */\r\nexport function setYScale (height, data) {\r\n  const flatData = Object.values(data).flat()\r\n    .filter(d => d.rank !== undefined && !isNaN(d.rank));\r\n\r\n  const minRank = d3.min(flatData, d => d.rank);\r\n  const maxRank = d3.max(flatData, d => d.rank);\r\n\r\n  return d3.scaleLinear()\r\n    .domain([maxRank, minRank]) // échelle inversée, le meilleur rank est en haut\r\n    .range([height, 0]);\r\n}\r\n","/**\r\n * Defines the contents of the tooltip. See CSS for tooltip styling.\r\n * The tooltip features the movie name, box office, total nominations,\r\n * rank, and release year.\r\n *\r\n * @param {object} d The data associated to the hovered element\r\n * @returns {string} The tooltip contents\r\n */\r\nexport function getContents(d) {\r\n  const boxOfficeFormatted = d.box_office\r\n    ? `$${Number(d.box_office).toLocaleString()}`\r\n    : 'Not Available'\r\n\r\n  const totalNominations = (d.oscarsData.oscarNominations || 0) + (d.goldenGlobesData.goldenGlobesNominations || 0)\r\n\r\n  return ` <div class=\"tooltip-value\" style=\"\r\n      background: linear-gradient(90deg,rgb(143, 143, 143) 0%,rgba(166, 166, 166, 0.4) 100%);\r\n      padding: 12px;\r\n      border-radius: 6px;\r\n      color: white;\r\n      backdrop-filter: blur(5px);\r\n      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);\r\n      \"\r\n  >\r\n    <div style=\"margin: 4px 0;\">\r\n      <strong>🎬 Movie:</strong> ${d.name}\r\n    </div>\r\n    <div style=\"margin: 4px 0;\">\r\n      <strong>💰 Box Office:</strong> ${boxOfficeFormatted}\r\n    </div>\r\n    <div style=\"margin: 4px 0;\">\r\n      <strong>🏆 Nominations:</strong> ${totalNominations}\r\n    </div>\r\n    <div style=\"margin: 4px 0;\">\r\n      <strong>⭐ Rank:</strong> ${d.rank}\r\n    </div>\r\n    <div style=\"margin: 4px 0;\">\r\n      <strong>📅 Year:</strong> ${d.year}\r\n    </div>\r\n  </div> \r\n  `\r\n}\r\n","/* eslint-disable space-before-blocks */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable space-in-parens */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-multi-spaces */\r\n/**\r\n * Positions the x axis label and y axis label.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n * @param {number} width The width of the graph\r\n * @param {number} height The height of the graph\r\n */\r\nexport function positionLabels (g, width, height) {\r\n  // TODO : Position axis labels\r\n  g.select('.x1.axis-text')\r\n    .attr('transform', 'translate(' + width/2 + ', '+ (height+50) +')');    // On décale le label x à la moitié de la largeur\r\n\r\n  g.select('.y1.axis-text')\r\n    .attr('transform', 'translate(-75, ' + height/2 + ')rotate(-90)');      // On décale le label x à la moitié de la hauteur\r\n}\r\n/**\r\n * Draws the circles on the graph.\r\n *\r\n * @param {object} g The D3 selection of the <g> element to draw in\r\n * @param {object} data The data to bind to\r\n * @param {*} rScale The scale for the circles' radius\r\n * @param {*} colorScale The scale for the circles' color\r\n */\r\nexport function drawCircles(g, data, rScale, colorScale) {\r\n  // On garde uniquement les films avec un box office valide\r\n  const cleanedData = data.filter(d =>\r\n    d.box_office !== \"Not Available\" &&\r\n    !isNaN(d.box_office) &&\r\n    d.rank !== undefined &&\r\n    !isNaN(d.rank)\r\n  );\r\n\r\n  // Liaison des données et création des cercles\r\n  g.selectAll('circle')\r\n    .data(cleanedData)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'bubble1');\r\n\r\n  // Mise à jour des attributs des cercles\r\n  g.selectAll('.bubble1')\r\n    .data(cleanedData)\r\n    .attr('r', d => rScale(\r\n      d.oscarsData.oscarNominations + d.goldenGlobesData.goldenGlobesNominations\r\n    ))\r\n    .attr('fill', d => colorScale(d.year))\r\n    .style('opacity', 0.85)\r\n    .attr('stroke', 'white');\r\n}\r\n\r\n/**\r\n * Updates the position of the circles based on their bound data.\r\n *\r\n * @param {object} g The D3 selection of the <g> element containing the circles\r\n * @param {*} xScale The x scale used to position the circles\r\n * @param {*} yScale The y scale used to position the circles\r\n * @param {number} transitionDuration The duration of the transition\r\n */\r\nexport function moveCircles(g, xScale, yScale, transitionDuration) {\r\n  g.selectAll('.bubble1')\r\n    .transition()\r\n    .duration(transitionDuration)\r\n    .attr('cx', d => xScale(d.box_office))\r\n    .attr('cy', d => yScale(d.rank));\r\n}\r\n\r\n\r\n/**\r\n * Sets up the hover event handler. The tooltip should show on on hover.\r\n *\r\n * @param {*} tip The tooltip\r\n */\r\nexport function setCircleHoverHandler (g,tip) {\r\n  // TODO : Set hover handler. The tooltip shows on\r\n  // hover and the opacity goes up to 100% (from 70%)\r\n\r\n                             // On sélectionne le graphe et les bulles\r\n    g.selectAll('.bubble1')                                  \r\n\r\n    .on('mouseover', function (e,d){              // Quand la souris passe dessus\r\n      d3.select(this).style('opacity', 1);        // Opacité -> 100%\r\n      tip.show(d, this);                          // On montre le tip \r\n    })\r\n    .on('mouseout', function (e,d){               // Quand la souris sort\r\n      d3.select(this).style('opacity', 0.85);      // Opacité -> 70%\r\n      tip.hide(d, this);                          // On cache le tip \r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Update the title of the graph.\r\n */\r\nexport function setTitleText (year) {\r\n  // TODO : Set the title\r\n  d3.select('#graph-g')                 // Sélection du graphe\r\n    .select('.title1')                   // Sélection du titre\r\n    .text('Data for year : ');   // On change le texte (initialement vide) comme attendu\r\n}\r\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","export {default as create} from \"./create\";\nexport {default as creator} from \"./creator\";\nexport {default as local} from \"./local\";\nexport {default as matcher} from \"./matcher\";\nexport {default as mouse} from \"./mouse\";\nexport {default as namespace} from \"./namespace\";\nexport {default as namespaces} from \"./namespaces\";\nexport {default as clientPoint} from \"./point\";\nexport {default as select} from \"./select\";\nexport {default as selectAll} from \"./selectAll\";\nexport {default as selection} from \"./selection/index\";\nexport {default as selector} from \"./selector\";\nexport {default as selectorAll} from \"./selectorAll\";\nexport {styleValue as style} from \"./selection/style\";\nexport {default as touch} from \"./touch\";\nexport {default as touches} from \"./touches\";\nexport {default as window} from \"./window\";\nexport {event, customEvent} from \"./selection/on\";\n","/**\n * d3.tip\n * Copyright (c) 2013-2017 Justin Palmer\n *\n * Tooltips for d3.js SVG visualizations\n */\n// eslint-disable-next-line no-extra-semi\nimport { map } from 'd3-collection'\nimport { selection, select } from 'd3-selection'\n// Public - constructs a new tooltip\n//\n// Returns a tip\nexport default function() {\n  var direction   = d3TipDirection,\n      offset      = d3TipOffset,\n      html        = d3TipHTML,\n      rootElement = document.body,\n      node        = initNode(),\n      svg         = null,\n      point       = null,\n      target      = null\n\n  function tip(vis) {\n    svg = getSVGNode(vis)\n    if (!svg) return\n    point = svg.createSVGPoint()\n    rootElement.appendChild(node)\n  }\n\n  // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n  tip.show = function() {\n    var args = Array.prototype.slice.call(arguments)\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args),\n        dir     = direction.apply(this, args),\n        nodel   = getNodeEl(),\n        i       = directions.length,\n        coords,\n        scrollTop  = document.documentElement.scrollTop ||\n      rootElement.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft ||\n      rootElement.scrollLeft\n\n    nodel.html(content)\n      .style('opacity', 1).style('pointer-events', 'all')\n\n    while (i--) nodel.classed(directions[i], false)\n    coords = directionCallbacks.get(dir).apply(this)\n    nodel.classed(dir, true)\n      .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n      .style('left', (coords.left + poffset[1]) + scrollLeft + 'px')\n\n    return tip\n  }\n\n  // Public - hide the tooltip\n  //\n  // Returns a tip\n  tip.hide = function() {\n    var nodel = getNodeEl()\n    nodel.style('opacity', 0).style('pointer-events', 'none')\n    return tip\n  }\n\n  // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n  tip.attr = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n)\n    }\n\n    var args =  Array.prototype.slice.call(arguments)\n    selection.prototype.attr.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n  tip.style = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n)\n    }\n\n    var args = Array.prototype.slice.call(arguments)\n    selection.prototype.style.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n  tip.direction = function(v) {\n    if (!arguments.length) return direction\n    direction = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n  tip.offset = function(v) {\n    if (!arguments.length) return offset\n    offset = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n  tip.html = function(v) {\n    if (!arguments.length) return html\n    html = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the root element anchor of the tooltip\n  //\n  // v - root element of the tooltip\n  //\n  // Returns root node of tip\n  tip.rootElement = function(v) {\n    if (!arguments.length) return rootElement\n    rootElement = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n  tip.destroy = function() {\n    if (node) {\n      getNodeEl().remove()\n      node = null\n    }\n    return tip\n  }\n\n  function d3TipDirection() { return 'n' }\n  function d3TipOffset() { return [0, 0] }\n  function d3TipHTML() { return ' ' }\n\n  var directionCallbacks = map({\n        n:  directionNorth,\n        s:  directionSouth,\n        e:  directionEast,\n        w:  directionWest,\n        nw: directionNorthWest,\n        ne: directionNorthEast,\n        sw: directionSouthWest,\n        se: directionSouthEast\n      }),\n      directions = directionCallbacks.keys()\n\n  function directionNorth() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionSouth() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    }\n  }\n\n  function directionWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    }\n  }\n\n  function directionSouthWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    }\n  }\n\n  function directionSouthEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.se.y,\n      left: bbox.se.x\n    }\n  }\n\n  function initNode() {\n    var div = select(document.createElement('div'))\n    div\n      .style('position', 'absolute')\n      .style('top', 0)\n      .style('opacity', 0)\n      .style('pointer-events', 'none')\n      .style('box-sizing', 'border-box')\n\n    return div.node()\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node()\n    if (!svgNode) return null\n    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n    return svgNode.ownerSVGElement\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode()\n      // re-add node to DOM\n      rootElement.appendChild(node)\n    }\n    return select(node)\n  }\n\n  // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n  function getScreenBBox(targetShape) {\n    var targetel   = target || targetShape\n\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode\n    }\n\n    var bbox       = {},\n        matrix     = targetel.getScreenCTM(),\n        tbbox      = targetel.getBBox(),\n        width      = tbbox.width,\n        height     = tbbox.height,\n        x          = tbbox.x,\n        y          = tbbox.y\n\n    point.x = x\n    point.y = y\n    bbox.nw = point.matrixTransform(matrix)\n    point.x += width\n    bbox.ne = point.matrixTransform(matrix)\n    point.y += height\n    bbox.se = point.matrixTransform(matrix)\n    point.x -= width\n    bbox.sw = point.matrixTransform(matrix)\n    point.y -= height / 2\n    bbox.w = point.matrixTransform(matrix)\n    point.x += width\n    bbox.e = point.matrixTransform(matrix)\n    point.x -= width / 2\n    point.y -= height / 2\n    bbox.n = point.matrixTransform(matrix)\n    point.y += height\n    bbox.s = point.matrixTransform(matrix)\n\n    return bbox\n  }\n\n  // Private - replace D3JS 3.X d3.functor() function\n  function functor(v) {\n    return typeof v === 'function' ? v : function() {\n      return v\n    }\n  }\n\n  return tip\n}\n","import { parseRuntime } from '../scripts/helper.js'\r\n\r\n/**\r\n* \r\n* @param {float} movieLength \r\n* @param {int} interval_size \r\n* @returns {string} The movie length interval in the format \"0-60\", \"61-{60+interval_size}\", \"{60+interval_size+1}-{60+2*interval_size}\", etc.\r\n*/\r\n\r\nfunction getMovieLengthInterval(movieLength, interval_size) {\r\n\r\n    // first interval is alway 0-60\r\n    if (movieLength < 61) return \"0-60\";\r\n\r\n    // other res interval are such that : movieLenght in res, length(res) = interval_size \r\n    const floor = Math.floor((movieLength - 60) / interval_size) * interval_size + 60;\r\n\r\n\r\n    return `${floor}-${floor + interval_size}`;\r\n}\r\n\r\n\r\n/**\r\n * Gets movies with the same field value as the specified movie\r\n * @param {Array} data - movie dataset\r\n * @param {int} intervalsLenght - La longueur des intervalles de dates, e.g : intervalsLenght : 5 -> intervals [1921,1925],[1926,1930]...\r\n * @param {string} selectedMetric - La métrique utilisé pour l'analyse (e.g., \"box_office\", \"profit\", \"rating\", \"numNominations\")\r\n * @returns {Object} data in the form \r\n * { \r\n *  \"[1921, 1925]\": {\r\n * \r\n *          \"totalMetric\" : float //pour rating = num movies dans cet interval\r\n * \r\n *          \"metricPerGenre\" : {\r\n *              \"Action\" : float //pour rating = num movies de ce genre dans cet interval\r\n *              \"Drama\" : float,\r\n *               ...\r\n *              },\r\n * \r\n *           \"metricsPerMovieLenght\" : {\r\n *                \"0-100\" : float //pour rating = num movies de cette longueur dans cet interval\r\n *               \"100-110\" : float,\r\n *               ...\r\n *               },\r\n * \r\n *           \"metricsPerCertificate\" : {\r\n *                \"R\" : float //pour rating = num movies de cette catégorie dans cet interval\r\n *                \"PG-13\" : float,\r\n *                 ...\r\n *                },\r\n *      },\r\n * \r\n *  \"[1926, 1930]\": {\r\n *      ...\r\n *      },\r\n * \r\n *  ...\r\n * \r\n *  \"[2016, 2020]\": {\r\n *      ...\r\n *      }\r\n * }\r\n */\r\nexport function getDataPerTimeInterval(data, intervalsLenght, selectedMetric) {\r\n\r\n    const res = {};\r\n\r\n\r\n    // We do the process for a tmp dict with key = only the year\r\n    const tmp = {};\r\n\r\n    for (const movie of data) {\r\n\r\n        const year = movie.year;\r\n        if (!tmp[year]) {\r\n            tmp[year] = {\r\n                totalMetric: 0,\r\n                metricPerGenre: {},\r\n                metricsPerMovieLenght: {},\r\n                metricsPerCertificate: {}\r\n            };\r\n        }\r\n\r\n        // Add the movie contribution to this year\r\n        const yearElem = tmp[year];\r\n\r\n        let metric = null;\r\n        if (selectedMetric === \"box_office\") {\r\n            if (typeof movie.box_office === \"number\") {\r\n                metric = movie.box_office;\r\n            }\r\n            else {\r\n                metric = 0;\r\n            }\r\n        }\r\n        if (selectedMetric === \"rating\")\r\n            metric = 1; // for rating, we just count the number of movies in the interval\r\n\r\n        if (selectedMetric === \"profit\") {\r\n            if (typeof movie.profit === \"number\") {\r\n                metric = movie.profit;\r\n            }\r\n            else {\r\n                metric = 0;\r\n            }\r\n        }\r\n\r\n        if (selectedMetric === \"numNominations\") {\r\n            const ggNomination = movie.goldenGlobesData ? (movie.goldenGlobesData.goldenGlobesNominations ? (typeof movie.goldenGlobesData.goldenGlobesNominations === \"number\" ? movie.goldenGlobesData.goldenGlobesNominations : 0) : 0) : 0;\r\n            const oscarNomination = movie.oscarsData ? (movie.oscarsData.oscarNominations ? (typeof movie.oscarsData.oscarNominations === \"number\" ? movie.oscarsData.oscarNominations : 0) : 0) : 0;\r\n            metric = ggNomination + oscarNomination;\r\n        }\r\n\r\n        if (movie.box_office) {\r\n            yearElem.totalMetric += metric;\r\n        }\r\n        movie.genre.forEach(genre => {\r\n            if (!yearElem.metricPerGenre[genre]) yearElem.metricPerGenre[genre] = 0;\r\n            yearElem.metricPerGenre[genre] += metric;\r\n        })\r\n        const movieLength = parseRuntime(movie.run_time);\r\n        if (movieLength) {\r\n            const lengthInterval = getMovieLengthInterval(movieLength, 5);\r\n            if (!yearElem.metricsPerMovieLenght[lengthInterval]) yearElem.metricsPerMovieLenght[lengthInterval] = 0;\r\n            yearElem.metricsPerMovieLenght[lengthInterval] += metric;\r\n        }\r\n        if (movie.certificate) {\r\n            if (!yearElem.metricsPerCertificate[movie.certificate]) yearElem.metricsPerCertificate[movie.certificate] = 0;\r\n            yearElem.metricsPerCertificate[movie.certificate] += metric;\r\n        }\r\n    }\r\n\r\n    // Now we need to reduce the tmp dict by grouping the years by intervals\r\n    for (const year in tmp) {\r\n        const yearElem = tmp[year];\r\n        const interval = `[${Math.floor(year / intervalsLenght) * intervalsLenght}, ${Math.floor(year / intervalsLenght) * intervalsLenght + intervalsLenght}]`;\r\n\r\n        if (!res[interval]) {\r\n            res[interval] = {\r\n                totalMetric: 0,\r\n                metricPerGenre: {},\r\n                metricsPerMovieLenght: {},\r\n                metricsPerCertificate: {}\r\n            };\r\n        }\r\n\r\n        const res_elem = res[interval];\r\n\r\n\r\n        res_elem.totalMetric += yearElem.totalMetric;\r\n\r\n        Object.keys(yearElem.metricPerGenre).forEach(genre => {\r\n            if (!res_elem.metricPerGenre[genre]) res_elem.metricPerGenre[genre] = 0;\r\n            res_elem.metricPerGenre[genre] += yearElem.metricPerGenre[genre];\r\n        })\r\n\r\n        Object.keys(yearElem.metricsPerMovieLenght).forEach(lengthInterval => {\r\n            if (!res_elem.metricsPerMovieLenght[lengthInterval]) res_elem.metricsPerMovieLenght[lengthInterval] = 0;\r\n            res_elem.metricsPerMovieLenght[lengthInterval] += yearElem.metricsPerMovieLenght[lengthInterval];\r\n        })\r\n\r\n        Object.keys(yearElem.metricsPerCertificate).forEach(certificate => {\r\n            if (!res_elem.metricsPerCertificate[certificate]) res_elem.metricsPerCertificate[certificate] = 0;\r\n            res_elem.metricsPerCertificate[certificate] += yearElem.metricsPerCertificate[certificate];\r\n        })\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\n\r\n/**\r\n * \r\n * @param {object} intervalData - res of preceding function in form \r\n * { \r\n *  \"[1921, 1925]\": {\r\n * \r\n *          \"totalMetric\" : float //pour rating = num movies dans cet interval\r\n * \r\n *          \"metricPerGenre\" : {\r\n *              \"Action\" : float //pour rating = num movies de ce genre dans cet interval\r\n *              \"Drama\" : float,\r\n *               ...\r\n *              },\r\n * \r\n *           \"metricsPerMovieLenght\" : {\r\n *                \"0-100\" : float //pour rating = num movies de cette longueur dans cet interval\r\n *               \"100-110\" : float,\r\n *               ...\r\n *               },\r\n * \r\n *           \"metricsPerCertificate\" : {\r\n *                \"R\" : float //pour rating = num movies de cette catégorie dans cet interval\r\n *                \"PG-13\" : float,\r\n *                 ...\r\n *                },\r\n *      },\r\n * \r\n *  \"[1926, 1930]\": {\r\n *      ...\r\n *      },\r\n * \r\n *  ...\r\n * \r\n *  \"[2016, 2020]\": {\r\n *      ...\r\n *      }\r\n * }\r\n * @param {string} selectedFilter - Le filtre utilisé pour l'analyse (e.g., \"genre\", \"movieLength\", \"certificate\")\r\n * @returns {object} res in the form\r\n * {\r\n * \"[1921, 1925]\" : {\r\n *      metricForfilter (metricPerselectedFilter) : {\r\n *          \"Action\" : float //e.g: 0.5\r\n *          \"Drama\" : float //e.g: 0.2\r\n *              ...\r\n *          },\r\n *      },\r\n *  [1926, 1930] : {...}\r\n *   ...\r\n * } \r\n */\r\n\r\n\r\nexport function getMarketPerTimeInterval(intervalData, selectedFilter) {\r\n    const res = {};\r\n\r\n\r\n    for (const interval in intervalData) {\r\n        const intervalElem = intervalData[interval];\r\n\r\n\r\n        res[interval] = {\r\n            metricForfilter: {}\r\n        };\r\n\r\n\r\n        const res_elem = res[interval];\r\n\r\n        // On normalise les valeurs par rapport à la somme des valeurs de chaque intervalle\r\n\r\n        // Par exemple si on a prix la métrique \"profit\", les valeurs de profits peuvent être négatives, donc pour chaque intervalle on calcule le min et si il est négatif on l'ajoute à chaque valeur de l'intervalle pour que toutes les valeurs soient positives.\r\n\r\n        if (selectedFilter === \"genre\") {\r\n\r\n            // Calcule du min :\r\n            const minG = Math.min(...Object.values(intervalElem.metricPerGenre));\r\n            if (minG < 0)\r\n                Object.keys(intervalElem.metricPerGenre).forEach(genre => {\r\n                    intervalElem.metricPerGenre[genre] += -minG;\r\n                })\r\n\r\n            const sum_genre_metric = Object.values(intervalElem.metricPerGenre).reduce((acc, val) => acc + val, 0);\r\n            Object.keys(intervalElem.metricPerGenre).forEach(genre => {\r\n                res_elem.metricForfilter[genre] = intervalElem.metricPerGenre[genre] / sum_genre_metric;\r\n            })\r\n        }\r\n        if (selectedFilter === \"movieLength\") {\r\n\r\n            const minML = Math.min(...Object.values(intervalElem.metricsPerMovieLenght));\r\n            if (minML < 0)\r\n                Object.keys(intervalElem.metricsPerMovieLenght).forEach(lengthInterval => {\r\n                    intervalElem.metricsPerMovieLenght[lengthInterval] += -minML;\r\n                })\r\n            const sum_lenght_metric = Object.values(intervalElem.metricsPerMovieLenght).reduce((acc, val) => acc + val, 0);\r\n            Object.keys(intervalElem.metricsPerMovieLenght).forEach(lengthInterval => {\r\n                res_elem.metricForfilter[lengthInterval] = intervalElem.metricsPerMovieLenght[lengthInterval] / sum_lenght_metric;\r\n            })\r\n        }\r\n\r\n        if (selectedFilter === \"certificate\") {\r\n\r\n            const minC = Math.min(...Object.values(intervalElem.metricsPerCertificate));\r\n            if (minC < 0)\r\n                Object.keys(intervalElem.metricsPerCertificate).forEach(certificate => {\r\n                    intervalElem.metricsPerCertificate[certificate] += -minC;\r\n                })\r\n\r\n            const sum_certificate_metric = Object.values(intervalElem.metricsPerCertificate).reduce((acc, val) => acc + val, 0);\r\n            Object.keys(intervalElem.metricsPerCertificate).forEach(certificate => {\r\n                res_elem.metricForfilter[certificate] = intervalElem.metricsPerCertificate[certificate] / sum_certificate_metric;\r\n            })\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {*} marketData - res of preceding function \r\n * @param {*} maxLines - object of the same form as marketData, but with the number of element in metricsForfilter limited to maxLines by regrouping the last elements in \"Other\" - and we store the list of present category in the res object to be able to display the legend\r\n * * @returns {object} res in the form\r\n * {\r\n * \"presentCategory\": [\"Action\", \"Drama\", ...],}\r\n * \"intervals\" : {\r\n *    \"[1921, 1925]\" : {}...}\r\n *    }\r\n * }\r\n */\r\n\r\nexport function reduceNumberOfLine(marketData, maxLines) {\r\n\r\n    const res = { \"presentCategory\": [], \"intervals\": {} };\r\n\r\n    for (const interval in marketData) {\r\n        const intervalElem = marketData[interval];\r\n        const res_elem = res[\"intervals\"][interval] = { metricForfilter: {} };\r\n\r\n\r\n        // Sort the genres by value\r\n        const sortedGenres = Object.entries(intervalElem.metricForfilter).sort((a, b) => b[1] - a[1]);\r\n\r\n\r\n        // Keep only the first maxLines elements and group the others in \"Other\"\r\n        const topGenres = sortedGenres.slice(0, maxLines - 1);\r\n        const otherGenres = sortedGenres.slice(maxLines - 1);\r\n\r\n\r\n        topGenres.forEach(([genre, value]) => {\r\n            res_elem.metricForfilter[genre] = value;\r\n            res[\"presentCategory\"].push(genre);\r\n        })\r\n\r\n\r\n        // Add the \"Other\" category\r\n        res_elem.metricForfilter[\"Other\"] = otherGenres.reduce((acc, [_, value]) => acc + value, 0);\r\n    }\r\n\r\n    // Remove duplicates from presentCategory\r\n    res[\"presentCategory\"] = [...new Set(res[\"presentCategory\"])];\r\n    res[\"presentCategory\"].push(\"Other\");\r\n    return res;\r\n}\r\n\r\n/**\r\n * @param {object} marketDataSmall - res of preceding function\r\n * @returns {object} res in the form\r\n * [\r\n *  { interval: \"[1920, 1928]\", Comedy: 0.28, Drama: 0.21, ..., Other: 0.*  21 },\r\n *  { interval: \"[1928, 1936]\", Comedy: 0.18, Drama: 0.18, ..., Other: 0.*  36 },\r\n *  ...\r\n * ]\r\n*/\r\n\r\n\r\nexport function stackData(marketDataSmall) {\r\n\r\n    return Object.entries(marketDataSmall.intervals).map(([interval, data]) => {\r\n        const row = { interval };\r\n        marketDataSmall.presentCategory.forEach(cat => {\r\n            row[cat] = data.metricForfilter[cat] || 0;\r\n        });\r\n        return row;\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","/**\r\n * Generates a specific <g> container inside a given SVG container.\r\n *\r\n * @param {string} svgSelector The selector of the SVG container (e.g. \".viz1-svg\" or \".film-impact-svg\")\r\n * @param {object} margin The desired margins around the graph\r\n * @param {string} id Optional ID or class for the <g> container\r\n * @returns {*} The d3 Selection for the created g element\r\n */\r\nexport function generateG(svgSelector, margin, id = null) {\r\n    const g = svgSelector\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    if (id) {\r\n        g.attr('id', id);\r\n    }\r\n\r\n    return g;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Sets the size of the SVG canvas containing the graph.\r\n *\r\n * @param {number} width The desired width\r\n * @param {number} height The desired height\r\n */\r\nexport function setCanvasSize(width, height) {\r\n    d3.select('.tendance-timeline-svg')\r\n        .attr('width', width)\r\n        .attr('height', height)\r\n}\r\n\r\n/**\r\n * Appends an SVG g element which will contain the axes.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n */\r\nexport function appendAxes(g) {\r\n    g.append('g')\r\n        .attr('class', 'x3 axis')\r\n\r\n    g.append('g')\r\n        .attr('class', 'y3 axis')\r\n}\r\n/**\r\n * Appends the labels for the the y axis and the title of the graph.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n */\r\nexport function appendGraphLabels(g) {\r\n    g.append('text')\r\n        .text('Distribution du marché (de 0 à 100%)')\r\n        .attr('class', 'y axis-text')\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('font-size', 12)\r\n\r\n    g.append('text')\r\n        .text('Années')\r\n        .attr('class', 'x axis-text')\r\n        .attr('font-size', 12)\r\n}\r\n\r\n/**\r\n* Positions the x axis label and y axis label.\r\n*\r\n* @param {*} g The d3 Selection of the graph's g SVG element\r\n* @param {number} width The width of the graph\r\n* @param {number} height The height of the graph\r\n*/\r\nexport function positionLabels(g, width, height) {\r\n    // TODO : Position axis labels\r\n    g.select('.x.axis-text')\r\n        .attr('transform', 'translate(' + width / 2 + ', ' + (height + 50) + ')');    // On décale le label x à la moitié de la largeur\r\n\r\n    g.select('.y.axis-text')\r\n        .attr('transform', 'translate(-50, ' + height / 2 + ')rotate(-90)');      // On décale le label x à la moitié de la hauteur\r\n}\r\n\r\n/**\r\n * Draws the X axis at the bottom of the diagram.\r\n *\r\n * @param {*} xScale The scale to use to draw the axis\r\n * @param {number} height The height of the graphic\r\n */\r\nexport function drawXAxis(xScale, height, intervals) {\r\n\r\n    const tickStep = Math.ceil(intervals.length / 12);\r\n    const filteredTicks = intervals.filter((_, i) => i % tickStep === 0);\r\n\r\n\r\n    d3.select('.x3.axis')\r\n        .attr('transform', 'translate( 0, ' + height + ')')\r\n        .call(d3.axisBottom(xScale)\r\n            .tickValues(filteredTicks)\r\n            .tickFormat(d => d)\r\n        );\r\n    // .tickSizeOuter(0)\r\n    // .ticks(10)\r\n    // .tickFormat(d3.format(\"d\")));\r\n}\r\n\r\n/**\r\n * Draws the Y axis to the left of the diagram.\r\n *\r\n * @param {*} yScale The scale to use to draw the axis\r\n */\r\nexport function drawYAxis(yScale) {\r\n    d3.select('.y3.axis')\r\n        .call(d3.axisLeft(yScale)\r\n            .tickSizeOuter(0)\r\n            .ticks(10)\r\n            .tickFormat(d3.format(\".2f\")));\r\n}","/**\r\n *\r\n *\r\n * @param {number} width The width of the graph\r\n * @param {object} data The data to be used\r\n * @returns {*} The linear scale in X\r\n */\r\nexport function setXScale(width, intervals) {\r\n  // TODO : Set scale\r\n\r\n  const xScale = d3.scaleBand()\r\n    .domain(intervals) // Les intervalles deviennent les domaines\r\n    .range([0, width])\r\n    .padding(0);\r\n\r\n  return xScale;\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {number} height The height of the graph\r\n * @returns {*} The linear scale in Y\r\n */\r\nexport function setYScale(height) {\r\n\r\n  const yScale = d3.scaleLinear()\r\n    .domain([0, 1])\r\n    .range([height, 0]);\r\n\r\n  return yScale\r\n}","export function createLegend(viz3MarketPerIntervalSmall, legendDiv, colorScale) {\r\n    // Ajouter les noms associés aux couleurs dans la légende -> insérer dans legendDiv\r\n    viz3MarketPerIntervalSmall.presentCategory.forEach(cat => {\r\n        const item = legendDiv.append(\"div\")\r\n            .style(\"display\", \"flex\")\r\n            .style(\"align-items\", \"center\");\r\n\r\n        item.append(\"div\")\r\n            .style(\"width\", \"30px\")\r\n            .style(\"height\", \"15px\")\r\n            .style(\"background-color\", colorScale(cat))\r\n            .style(\"margin-right\", \"5px\");\r\n\r\n        item.append(\"span\")\r\n            .text(cat)\r\n            .style(\"font-size\", \"12px\")\r\n    });\r\n}","/**\r\n * Defines the contents of the tooltip. See CSS for tooltip styling.\r\n * The tooltip features the movie name, box office, total nominations,\r\n * rank, and release year.\r\n *\r\n * @param {object} d The data associated to the hovered element\r\n * @returns {string} The tooltip contents\r\n */\r\nexport function getContents(d, colorScale) {\r\n\r\n\r\n\r\n  return `<div class=\"tooltip-value\" style=\"\r\n      z-index: 6;\r\n      background: linear-gradient(90deg,rgb(143, 143, 143) 0%,rgba(166, 166, 166, 0.4) 100%);\r\n      padding: 12px;\r\n      border-radius: 6px;\r\n      color: white;\r\n      backdrop-filter: blur(5px);\r\n      box-shadow: 1px -1px 10px 0px rgba(0, 0, 0, 0.3);\r\n      border-top : 1px solid ${colorScale(d.category)};\r\n      \"\r\n  >\r\n    <div style=\"margin: 4px 0; color: ${colorScale(d.category)}; filter : brightness(1.5);\">\r\n      <strong>🎬 Catégorie : </strong>${d.category}\r\n    </div>\r\n    <div style=\"margin: 4px 0;\">\r\n      <strong>📊 Part de marché : </strong> ${((d[1] - d[0]) * 100).toFixed(2)}%\r\n    </div>\r\n    <div style=\"margin: 4px 0;\">\r\n      <strong>📅 Date : </strong> ${d.data.interval}\r\n    </div>\r\n  </div>\r\n  `\r\n}\r\n\r\n\r\n/**\r\n * Sets up the hover event handler. The tooltip should show on on hover.\r\n *\r\n * @param {*} tip The tooltip\r\n */\r\nexport function setRectHoverHandler(g, tip) {\r\n  // TODO : Set hover handler. The tooltip shows on\r\n  // hover and the opacity goes up to 100% (from 70%)\r\n\r\n  g.selectAll('.rect3')\r\n    .on('mouseover', function (e, d) {              // Quand la souris passe dessus\r\n      d3.select(this)\r\n        .style('opacity', 0.8)\r\n        .style('cursor', 'pointer');\r\n      tip.show(d, this);                          // On montre le tip \r\n    })\r\n    .on('mouseout', function (e, d) {               // Quand la souris sort\r\n      d3.select(this).style('opacity', 1);      // Opacité -> 70%\r\n      tip.hide(d, this);                          // On cache le tip \r\n    });\r\n}","// Fonction pour sélectionner un rectangle au hasard et afficher ses infos\r\n\r\nexport function selectRandomRectangle() {\r\n    // Sélectionner tous les rectangles de la visualisation 3\r\n    const rectangles = d3.selectAll(\".bars .rect3\").nodes();\r\n\r\n    if (rectangles.length === 0) {\r\n        console.log(\"Aucun rectangle trouvé dans la visualisation 3.\");\r\n        return;\r\n    }\r\n\r\n    const filteredRectangles = rectangles.filter(rect => {\r\n        const rectData = d3.select(rect).datum();\r\n        return (rectData[1] - rectData[0]) > 0.1; // Condition\r\n    });\r\n\r\n    // Choisir un rectangle au hasard\r\n    const randomIndex = Math.floor(Math.random() * filteredRectangles.length);\r\n    const randomRect = filteredRectangles[randomIndex];\r\n\r\n\r\n    randomRect.setAttribute(\"stroke\", \"black\");\r\n    randomRect.setAttribute(\"stroke-width\", \"2\");\r\n    randomRect.setAttribute(\"stroke-dasharray\", \"4,2\");\r\n    randomRect.parentNode.appendChild(randomRect);\r\n    randomRect.parentNode.parentNode.appendChild(randomRect.parentNode);\r\n\r\n    // Récupérer les données associées au rectangle\r\n    const rectData = d3.select(randomRect).datum();\r\n\r\n    return {\r\n        category: rectData.category,\r\n        interval: rectData.data.interval,\r\n        proportion: `${((rectData[1] - rectData[0]) * 100).toFixed(2)}%`\r\n    }\r\n}\r\n\r\n\r\nexport function phraseExemple(dataExample, colorScale) {\r\n\r\n    const partsOfInterval = dataExample.interval.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\r\n    const startYear = partsOfInterval[0].trim();\r\n    const endYear = partsOfInterval[1].trim();\r\n\r\n\r\n    const ExempleLecture = `\r\n    <div class=\"exempleViz3\">\r\n        Exemple de Lecture : Entre <strong>${startYear}</strong> et <strong>${endYear}</strong>, la catégorie <strong style=\"color : ${colorScale(dataExample.category)}\">${dataExample.category}</strong> représentait <strong>${dataExample.proportion}</strong> du marché.\r\n    </div>`\r\n\r\n    return ExempleLecture\r\n}","/**\r\n * Generates the SVG element g which will contain the data visualisation.\r\n *\r\n * @param {object} margin The desired margins around the graph\r\n * @returns {*} The d3 Selection for the created g element\r\n */\r\nexport function margeG (g, margin) {\r\n    g.attr('transform',\r\n        'translate(' + margin.left + ',' + margin.top + ')')\r\n  }\r\n  \r\n  /**\r\n   * Sets the size of the SVG canvas containing the graph.\r\n   *\r\n   * @param {number} width The desired width\r\n   * @param {number} height The desired height\r\n   */\r\n  export function setCanvasSize (width, height) {\r\n    d3.select('.film-impact-svg')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n  }\r\n  \r\n  /**\r\n   * Appends an SVG g element which will contain the axes.\r\n   *\r\n   * @param {*} g The d3 Selection of the graph's g SVG element\r\n   */\r\n  export function appendAxes (g) {\r\n    g.append('g')\r\n      .attr('class', 'x axis')\r\n  \r\n    g.append('g')\r\n      .attr('class', 'y axis')\r\n  }\r\n  /**\r\n   * Appends the labels for the the y axis and the title of the graph.\r\n   *\r\n   * @param {*} g The d3 Selection of the graph's g SVG element\r\n   */\r\n  export function appendGraphLabels (g) {\r\n    g.append('text')\r\n      .text('%')\r\n      .attr('class', 'y axis-text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('font-size', 12)\r\n  \r\n    g.append('text')\r\n      .text('Année')\r\n      .attr('class', 'x axis-text')\r\n      .attr('font-size', 12)\r\n  }\r\n\r\n  /**\r\n * Positions the x axis label and y axis label.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n * @param {number} width The width of the graph\r\n * @param {number} height The height of the graph\r\n */\r\nexport function positionLabels (g, width, height) {\r\n    // TODO : Position axis labels\r\n    g.select('.x.axis-text')\r\n      .attr('transform', 'translate(' + width/2 + ', '+ (height+50) +')');    // On décale le label x à la moitié de la largeur\r\n  \r\n    g.select('.y.axis-text')\r\n      .attr('transform', 'translate(-50, ' + height/2 + ')rotate(-90)');      // On décale le label x à la moitié de la hauteur\r\n  }\r\n  \r\n  /**\r\n   * Draws the X axis at the bottom of the diagram.\r\n   *\r\n   * @param {*} xScale The scale to use to draw the axis\r\n   * @param {number} height The height of the graphic\r\n   */\r\n  export function drawXAxis (xScale, height) {\r\n    d3.select('.x.axis')\r\n      .attr('transform', 'translate( 0, ' + height + ')')\r\n      .call(d3.axisBottom(xScale)\r\n      .tickSizeOuter(0)\r\n      .ticks(10)\r\n      .tickFormat(d3.format(\"d\")));\r\n  }\r\n  \r\n  /**\r\n   * Draws the Y axis to the left of the diagram.\r\n   *\r\n   * @param {*} yScale The scale to use to draw the axis\r\n   */\r\n  export function drawYAxis (yScale) {\r\n    d3.select('.y.axis')\r\n      .call(d3.axisLeft(yScale)\r\n      .tickSizeOuter(0)\r\n      .ticks(5)\r\n      .tickFormat(d3.format(\"~s\")));\r\n  }","// Initialize the film list\r\nexport function initFilmList(filmArray) {\r\n\r\n    const filmData = d3.map(filmArray, d => String(d.name)).sort();\r\n    \r\n    // Initial render of all films\r\n    updateFilmList(filmData);\r\n    \r\n    // Set up search input event listener\r\n    d3.select(\"#search-input\").on(\"input\", function() {\r\n      const searchTerm = this.value.toLowerCase();\r\n      \r\n      if (searchTerm === \"\") {\r\n        updateFilmList(filmData);\r\n      } else {\r\n        const filteredFilms = filmData.filter(film =>\r\n            film.toLowerCase().includes(searchTerm)\r\n        );\r\n        updateFilmList(filteredFilms);\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Update the displayed film list\r\n  export function updateFilmList(films) {\r\n    const list = d3.select(\"#movie-list\");\r\n    list.selectAll(\"*\").remove();\r\n    \r\n    if (films.length === 0) {\r\n        list.append(\"li\")\r\n      .style(\"color\", \"#999\")\r\n      .style(\"font-style\", \"italic\")\r\n      .style(\"padding\", \"8px 12px\")\r\n      .style(\"border-bottom\", \"1px solid #eee\")\r\n      .text(\"Aucun film trouvé\");\r\n  } else {\r\n    // Create all list items\r\n    list.selectAll(\"li\")\r\n       .data(films)\r\n       .enter()\r\n       .append(\"li\")\r\n       .style(\"padding\", \"8px 12px\")\r\n       .style(\"border-bottom\", \"1px solid #eee\")\r\n       .style(\"cursor\", \"pointer\")\r\n       .text(d => d)\r\n       .on(\"click\", function(_, d) {\r\n           d3.select(\"#search-input\").property(\"value\", d);\r\n           list.style(\"display\", \"none\");\r\n           console.log(\"Selected Movie : \", d);\r\n\r\n           document.dispatchEvent(new CustomEvent('viz4movieSelected', {\r\n            detail: {\r\n                movie: d,\r\n                timestamp: new Date()\r\n            }\r\n        }));\r\n       });\r\n  }\r\n    \r\n    // Always show all results but in a scrollable container\r\n    list.style(\"display\", \"block\")\r\n       .style(\"max-height\", \"100px\")  // Fixed height for scrolling\r\n       .style(\"overflow-y\", \"auto\");  // Enable vertical scroll\r\n    \r\n    \r\n    \r\n    // Remove border from last item\r\n    list.selectAll(\"li:last-child\")\r\n       .style(\"border-bottom\", \"none\");\r\n  }\r\n","/**\r\n * Defines the log scale used to position the center of the circles in X.\r\n *\r\n * @param {number} width The width of the graph\r\n * @param {object} data The data to be used\r\n * @returns {*} The linear scale in X\r\n */\r\nexport function setXScale (width, data) {\r\n    // TODO : Set scale\r\n  \r\n    const flatData = Object.values(data).flat();  // On applatit pour avoir des extrema globaux de GDP\r\n    //console.log(data);\r\n  \r\n    const xScale = d3.scaleLinear()                  // Contrairement au carnet observable, l'échelle est logarithmique\r\n      .domain([\r\n                d3.min(flatData, d => d.year),    \r\n                d3.max(flatData, d => d.year)\r\n              ])\r\n      .range([0,width]);\r\n  \r\n    return xScale\r\n  }\r\n\r\n/**\r\n * Defines the log scale used to position the center of the circles in Y.\r\n *\r\n * @param {number} height The height of the graph\r\n * @param {object} data The data to be used\r\n * @returns {*} The linear scale in Y\r\n */\r\nexport function setYScaleBO (height, data) {      // Idem que la fonction précédente\r\n    // TODO : Set scale\r\n\r\n    const flatData = Object.values(data).flat();\r\n  \r\n    const yScale = d3.scaleLinear()\r\n      .domain([\r\n                d3.min(flatData, d => 0),    \r\n                d3.max(flatData, d => 1000)\r\n              ])\r\n      .range([height,0]);\r\n  \r\n    return yScale}\r\n\r\nexport function setYScaleMesureSucces (height, data, key) {\r\n  // TODO : Set scale\r\n\r\n  const flatData = Object.values(data).flat();\r\n\r\n  const yScale = d3.scaleLinear()\r\n    .domain([\r\n              //d3.min(flatData, d => d[key]),    \r\n              //d3.max(flatData, d => d[key])\r\n              d3.min(data, d => \r\n                d3.min(d.data, x => x.average)\r\n              ),\r\n              d3.max(data, d => \r\n                d3.max(d.data, x => x.average)\r\n              )\r\n            ])\r\n    .range([height,0]);\r\n\r\n  return yScale}\r\n\r\nexport function setColorScale(data){\r\n\r\n  const categories = data.map(d => d.category).sort();\r\n\r\n  const colorScale = d3.scaleOrdinal()\r\n    .domain(categories)\r\n    .range(d3.schemeSet2);                          \r\n\r\n  return colorScale\r\n}","/**\r\n * Gets movies with the same field value as the specified movie\r\n * @param {Array} data - Your movie dataset\r\n * @param {string} movieName - Target movie name\r\n * @param {string} field - Dynamic field to compare (e.g., \"genre\", \"director\")\r\n * @returns {Array} Sorted array of matching movies\r\n */\r\nexport function getMoviesBySameField(movieName, data, field) {\r\n    const targetMovie = data.find(movie => movie.name === movieName);\r\n    if (!targetMovie) return [];\r\n\r\n    // Normalize field values (handle both arrays and single values)\r\n    const targetValues = Array.isArray(targetMovie[field])\r\n        ? targetMovie[field]\r\n        : [targetMovie[field]];\r\n\r\n    // Create an array of arrays, one per distinct field value\r\n    const moviesByFieldValue = targetValues.map(targetValue => {\r\n        // Filter movies that include this specific field value (case-insensitive exact match)\r\n        const matchingMovies = data.filter(movie => {\r\n            //if (movie.name === movieName) return false; // Skip the target movie\r\n            \r\n            const movieValues = Array.isArray(movie[field])\r\n                ? movie[field]\r\n                : [movie[field]];\r\n                \r\n            return movieValues.some(value => \r\n                String(value).toLowerCase() === String(targetValue).toLowerCase()\r\n            );\r\n        });\r\n\r\n        // Sort alphabetically if multiple movies\r\n        const sortedMovies = matchingMovies.length > 1\r\n            ? [...matchingMovies].sort((a, b) => a.name.localeCompare(b.name))\r\n            : matchingMovies;\r\n\r\n        return {\r\n            categorie: targetValue, // The specific value being matched (e.g. \"Action\")\r\n            movies: sortedMovies    // Array of matching movies\r\n        };\r\n    });\r\n\r\n    return moviesByFieldValue;\r\n}\r\n\r\nfunction averageByYear(data, succesMesure) {\r\n    const yearGroups = {};\r\n    \r\n    // Group and sum by year\r\n    data.forEach(item => {\r\n        if (typeof item[succesMesure] !== 'number') return;\r\n        \r\n        const year = item.year;\r\n        yearGroups[year] = yearGroups[year] || { sum: 0, count: 0, names: [] };\r\n        yearGroups[year].sum += item[succesMesure];\r\n        yearGroups[year].count++;\r\n        yearGroups[year].names.push(item.name);\r\n    });\r\n    \r\n    // Calculate averages and format output\r\n    return Object.keys(yearGroups)\r\n        .map(year => ({\r\n            year: +year,\r\n            average: parseFloat((yearGroups[year].sum / yearGroups[year].count).toFixed(2)),\r\n            count : yearGroups[year].count,\r\n            noms : yearGroups[year].names.join(\"; \")\r\n        }))\r\n        .sort((a, b) => a.year - b.year);\r\n}\r\n\r\nexport function generateDataToDisplay(movieName, data, fields, minlength) {\r\n    const dataToDisplay = [];\r\n\r\n    // Capitalize first letter helper\r\n    const capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n    \r\n    fields.forEach(field => {\r\n        // Get grouped movies for this field\r\n        const groupedResults = getMoviesBySameField(movieName, data, field);\r\n        \r\n        // Process each group separately\r\n        groupedResults.forEach(group => {\r\n\r\n            const averageData = averageByYear(group.movies, \"mesureDeSucces\");\r\n            //console.log(\"Average :\", averageData);\r\n\r\n            if (averageData.length > minlength){\r\n                dataToDisplay.push({\r\n                    category: `${capitalize(field)} : ${group.categorie}`, // e.g. \"genre: Action\"\r\n                    data: averageByYear(group.movies, \"mesureDeSucces\")\r\n                })\r\n            } \r\n            else {\r\n                //console.log(group.categorie, \" is singleton\")\r\n            }\r\n        });\r\n    });\r\n    \r\n    //console.log(\"Data to display:\", dataToDisplay);\r\n    return dataToDisplay;\r\n}\r\n\r\nexport function indexData(referenceName, originalData, successMesure) {\r\n\r\n    const validData = originalData.filter(movie => {\r\n        const value = movie[successMesure];\r\n        return (\r\n            value !== undefined &&  \r\n            value !== null &&     \r\n            !isNaN(value) &&       \r\n            value > 0             \r\n        );\r\n    });\r\n\r\n    const targetMovie = validData.find(movie => movie.name === referenceName);\r\n    if (!targetMovie) {\r\n        return [];\r\n    }\r\n\r\n    const referenceValue = targetMovie[successMesure];\r\n    console.log(\"Ref : \", referenceValue);\r\n    const targetYear = targetMovie.year;\r\n    //console.log(`Indexing ${validData.length} movies against ${referenceName} (${referenceValue})`);\r\n\r\n    return validData.map(movie => ({\r\n        ...movie,  \r\n        mesureDeSucces: (movie[successMesure] / referenceValue) * 100\r\n    }))\r\n    .filter(movie => \r\n        movie.name === referenceName ||  // Keep target movie\r\n        movie.year !== targetYear    // Remove others with same year\r\n    );\r\n}\r\n\r\nexport function addNumberOfNominations(dataSource) {\r\n    return dataSource.map(movie => {\r\n        // Calculate Golden Globes nominations (with null checks)\r\n        const ggNomination = movie.goldenGlobesData?.goldenGlobesNominations ?? 0;\r\n        \r\n        // Calculate Oscars nominations (with null checks)\r\n        const oscarNomination = movie.oscarsData?.oscarNominations ?? 0;\r\n        \r\n        // Calculate total metric (sum of both)\r\n        const metric = (typeof ggNomination === 'number' ? ggNomination : 0) + \r\n                      (typeof oscarNomination === 'number' ? oscarNomination : 0);\r\n        \r\n        // Return new object with all original properties plus the new metric field\r\n        return {\r\n            ...movie,\r\n            nominations: {\r\n                goldenGlobes: ggNomination,\r\n                oscars: oscarNomination,\r\n                total: metric\r\n            },\r\n            numNominations: metric  // Adding the total as a top-level property for easy access\r\n        };\r\n    });\r\n}","export function drawCircles(data, xScale, yScale, colorScale, width) {\r\n    const courbesElement = d3.select(\".courbes\"); \r\n\r\n    console.log(\"je vais dessiner \", data);\r\n\r\n    // Clear previous elements\r\n    courbesElement.selectAll(\".ensemble-points\").remove();\r\n    courbesElement.selectAll(\".data-line\").remove();\r\n    courbesElement.selectAll(\".legend-item\").remove(); // Changed from myLabels\r\n    courbesElement.selectAll(\".category-group\").remove();\r\n\r\n    const categoryGroups = courbesElement.selectAll(\".category-group\")\r\n    .data(data)\r\n    .enter()\r\n    .append(\"g\")\r\n    .attr(\"class\", d => `category-group ${d.category.replace(/[^\\w\\s-]/g, '').replace(/\\s+/g, '-').toLowerCase()}`);\r\n\r\n    const line = d3.line()\r\n        .x(d => xScale(d.year))\r\n        .y(d => yScale(d.average));\r\n\r\n    // Draw lines\r\n    categoryGroups\r\n        .append(\"path\")\r\n            .attr(\"class\", \"data-line\") // Sanitize class name\r\n            .attr(\"d\", d => line(d.data))\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", d => colorScale(d.category))\r\n            .attr(\"stroke-width\", 4)\r\n            //.attr(\"pointer-events\", \"none\")\r\n            .on(\"mouseover\", function(event, d) {\r\n                // Select the parent group and all its elements\r\n                const parentGroup = d3.select(this.parentNode);\r\n                \r\n                // Fade all other category groups\r\n                d3.selectAll(\".category-group\").each(function() {\r\n                    if (this !== parentGroup.node()) {\r\n                        const currentOpacity = parseFloat(d3.select(this).style(\"opacity\"));\r\n                        if (currentOpacity != 0) {\r\n                            d3.select(this).style(\"opacity\", 0.35);\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                // Highlight the hovered group\r\n                parentGroup.style(\"opacity\", 1);\r\n            })\r\n            .on(\"mouseout\", function(event, d) {\r\n                // Restore opacity for all groups\r\n                d3.selectAll(\".category-group, .ensemble-points\").each(function() {\r\n                    const currentOpacity = parseFloat(d3.select(this).style(\"opacity\"));\r\n                    if (currentOpacity != 0) {\r\n                        d3.select(this).style(\"opacity\", 1);\r\n                    }\r\n                });\r\n            });\r\n          \r\n\r\n    // Draw points\r\n    categoryGroups\r\n        .append('g')\r\n        .attr(\"class\", d => \"ensemble-points\") // Sanitize class name\r\n            .attr(\"fill\", d => colorScale(d.category))\r\n        .selectAll(\".data-point\")\r\n            .data(d => d.data)\r\n            .enter()\r\n            .append(\"circle\")\r\n                .attr(\"class\", \"data-point\")\r\n                .attr(\"cx\", d => xScale(d.year))\r\n                .attr(\"cy\", d => yScale(d.average))\r\n                .attr(\"r\", 5)\r\n                .attr(\"stroke\", \"white\");\r\n\r\n    // Add legend\r\n    const legend = courbesElement.append(\"g\")\r\n        .attr(\"class\", \"legend\")\r\n        .attr(\"transform\", `translate(${width}, 20)`);\r\n\r\n    legend.selectAll(\".legend-item\")\r\n        .data(data)\r\n        .enter()\r\n        .append(\"g\")\r\n            .attr(\"class\", \"legend-item\")\r\n            .attr(\"transform\", (d, i) => `translate(0, ${i * 25})`)\r\n        .append(\"text\")\r\n            .text(d => d.category)\r\n            .attr(\"x\", 20)\r\n            .attr(\"y\", 9)\r\n            .style(\"fill\", d => colorScale(d.category))\r\n            .style(\"font-size\", \"15px\")\r\n            .style(\"font-weight\", \"bold\") // Start bold (since curves are visible)\r\n            .style(\"cursor\", \"pointer\")\r\n            .on(\"click\", hideShowCategory);\r\n}\r\n\r\n\r\nfunction hideShowCategory(event, d) {\r\n    const categoryClass = d.category.replace(/[^\\w\\s-]/g, '').replace(/\\s+/g, '-').toLowerCase();\r\n    const currentOpacity = d3.selectAll(`.${categoryClass}`).style(\"opacity\");\r\n    d3.selectAll(`.${categoryClass}`)\r\n        .transition()\r\n        .style(\"opacity\", currentOpacity == 1 ? 0 : 1)\r\n        .attr(\"pointer-events\", currentOpacity == 1 ? \"none\" : \"visible\");\r\n    d3.select(event.currentTarget)\r\n        .transition()\r\n        .style(\"font-weight\", currentOpacity == 0 ? \"bold\" : \"normal\");\r\n}\r\n\r\nexport function drawRef(title, data, xScale, yScale, height) {\r\n    const courbesElement = d3.select(\".courbes\"); \r\n\r\n    courbesElement.selectAll(\".ref-marker, .ref-line\").remove();\r\n\r\n    const targetMovie = data.find(movie => movie.name === title);\r\n    if (!targetMovie) return;\r\n\r\n    const xPos = xScale(targetMovie.year);\r\n    const yPos = yScale(100); // Assuming 100 is your reference value\r\n\r\n    // Add horizontal trace line (from y-axis to point)\r\n    courbesElement.append(\"line\")\r\n        .attr(\"class\", \"ref-line\")\r\n        .attr(\"x1\", 0) // Start at y-axis\r\n        .attr(\"x2\", xPos)\r\n        .attr(\"y1\", yPos)\r\n        .attr(\"y2\", yPos)\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"stroke-dasharray\", \"3,3\") // Dashed line\r\n        .attr(\"opacity\", 0.7);\r\n\r\n    courbesElement.append(\"line\")\r\n        .attr(\"class\", \"ref-line\")\r\n        .attr(\"x1\", xPos) // Start at y-axis\r\n        .attr(\"x2\", xPos)\r\n        .attr(\"y1\", yPos)\r\n        .attr(\"y2\", height)\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"stroke-dasharray\", \"3,3\") // Dashed line\r\n        .attr(\"opacity\", 0.7);\r\n\r\n    courbesElement.append(\"circle\")\r\n            .datum(targetMovie)\r\n            .attr(\"class\", \"ref-marker\")\r\n            .attr(\"cx\", xPos)\r\n            .attr(\"cy\", yPos)\r\n            .attr(\"r\", 5)\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"stroke\", \"black\")\r\n            .attr(\"stroke-width\", 2);\r\n}","export function generateCheckBoxes(list) {\r\n\r\n    const checkGroup = d3.select(\".check-group\");\r\n\r\n    const options = checkGroup.selectAll(\".check-option\")\r\n    .data(list)\r\n    .enter()\r\n    .append(\"div\")\r\n    .attr(\"class\", \"check-option\")\r\n    .html(d => `\r\n        <input type=\"checkbox\" id=\"check-${d}\" name=\"category\" value=\"${d}\" checked>\r\n        <label for=\"check-${d}\">${d.charAt(0).toUpperCase() + d.slice(1)}</label>\r\n    `);\r\n\r\n    options.select('input')\r\n        .on(\"change\", function(event, d) {\r\n            const isChecked = event.target.checked;\r\n\r\n            console.log(\"Checked ? \", isChecked);\r\n\r\n            const legendes = d3.selectAll(\".legend-item\");\r\n\r\n            const legendesFiltrees = legendes.filter(function() {\r\n                return d3.select(this).select(\"text\").text().toLowerCase().includes(d);\r\n              });\r\n\r\n              console.log(legendesFiltrees);\r\n\r\n            legendesFiltrees.each(function() {\r\n                const fontweight = d3.select(this).select(\"text\").style(\"font-weight\");\r\n\r\n                console.log(\"weight ? \", fontweight);\r\n                \r\n                if (((fontweight == \"normal\") && isChecked) || ((fontweight == \"bold\") && !isChecked)){ \r\n                    d3.select(this).select(\"text\").dispatch('click');\r\n                }\r\n            });\r\n        });\r\n}\r\n\r\nexport function checkAll() {\r\n    d3.selectAll(\".check-option input[type='checkbox']\")\r\n        .property(\"checked\", true);\r\n}","/**\r\n * Defines the contents of the tooltip. See CSS for tooltip styling.\r\n * The tooltip features the movie name, box office, total nominations,\r\n * rank, and release year.\r\n *\r\n * @param {object} d The data associated to the hovered element\r\n * @returns {string} The tooltip contents\r\n */\r\nexport function getContents(d, colorScale) {\r\n\r\n  console.log(d);\r\n\r\n  let html = `<div class=\"tooltip-value\" style=\"\r\n      z-index: 6;\r\n      background: linear-gradient(90deg,rgb(145, 145, 145) 0%,rgba(166, 166, 166, 0.6) 100%);\r\n      padding: 12px;\r\n      border-radius: 6px;\r\n      color: white;\r\n      backdrop-filter: blur(5px);\r\n      box-shadow: 1px -1px 10px 0px rgba(0, 0, 0, 0.3);\r\n      margin-bottom: 15px;\r\n      \"\r\n  >  `;\r\n\r\n  if (d.name !== undefined) {\r\n    html += `<div style=\"margin: 4px 0;\">\r\n              <strong>📋 Titre:</strong> ${d.name}\r\n            </div>`;\r\n  }\r\n\r\n  // Always show year\r\n  html += `<div style=\"margin: 4px 0; filter: brightness(1.5);\">\r\n            <strong>📅 Année:</strong> ${d.year}\r\n          </div>`;\r\n\r\n  // Conditional content based on data\r\n  if (d.count !== undefined) {\r\n    html += `<div style=\"margin: 4px 0;\">\r\n              <strong>🎬 Nombre de films:</strong> ${d.count}\r\n            </div>`;\r\n  }\r\n\r\n  if (d.average !== undefined) {\r\n    html += `<div style=\"margin: 4px 0;\">\r\n              <strong>⭐ Moyenne:</strong> ${d.average.toFixed(2)}%\r\n            </div>`;\r\n  }\r\n\r\n  // Different detail display for different data types\r\n  if (d.noms !== undefined) {\r\n    html += `<div style=\"margin: 4px 0;\">\r\n              <strong>📋 Films:</strong> ${d.noms}\r\n            </div>`;\r\n  }\r\n\r\n  // Close the div\r\n  html += `</div>`;\r\n\r\n  return html;\r\n}\r\n\r\n\r\n/**\r\n * Sets up the hover event handler. The tooltip should show on on hover.\r\n *\r\n * @param {*} tip The tooltip\r\n */\r\nexport function setCircleHoverHandler(g, tip) {\r\n  // TODO : Set hover handler. The tooltip shows on\r\n  // hover and the opacity goes up to 100% (from 70%)\r\n\r\n  g.selectAll(\".data-point, .ref-marker\")\r\n    .on('mouseover', function (e, d) {\r\n      d3.select(this)\r\n        .style('cursor', 'pointer')\r\n        .attr(\"r\", 6);\r\n      tip.show(d, this);\r\n    })\r\n    .on('mouseout', function (e, d) {\r\n      d3.select(this)\r\n        .attr(\"r\", 5);\r\n      tip.hide(d, this);\r\n    });\r\n}","// 'use strict'\r\n/**\r\n * @file This file is the entry-point for the the code for the Project of the course INF8808.\r\n * @author TODO\r\n * @version beta\r\n */\r\n\r\n\r\nimport { addGoldenGlobesData, getGoldenGlobesMovieData } from './scripts/process_golden_globes'\r\nimport { addOscarsData, getOscarsMovieData } from './scripts/process_oscars'\r\nimport { addAdditionalMovieData, getAdditionalMovieData } from './scripts/process_additional_movie_data'\r\nimport { processMovieData } from './scripts/process_imdb'\r\nimport {\r\n  getFilmContributorsData, getGenreDataIntervals,\r\n  getTopCollaborations, getCertificateData, getDataBySeason, getMovieLengthData, getTaglineWordsData, getTaglineLengthData, calculateMovieProfits, getMoviesByGenre\r\n} from './scripts/preprocess_data'\r\n\r\nimport { adjustForInflation, convertMovieNamesToString } from './scripts/helper.js'\r\n\r\n/* Visualisation 1 - Importations */\r\n\r\nimport * as viz1Helper from './viz1-scripts/viz1-helper.js'\r\nimport * as viz1Legend from './viz1-scripts/viz1-legend.js'\r\nimport * as viz1Scales from './viz1-scripts/viz1-scales.js'\r\nimport * as viz1Tooltip from './viz1-scripts/viz1-tooltip.js'\r\nimport * as viz1Viz from './viz1-scripts/viz1-viz.js'\r\n\r\nimport d3Tip from 'd3-tip'\r\n\r\n\r\n/* Visualisation 3 - Importations */\r\nimport * as viz3Process from './viz3-scripts/viz3-preprocess.js'\r\nimport * as viz3Helper from './viz3-scripts/viz3-helper.js'\r\nimport * as viz3Scales from './viz3-scripts/viz3-scales.js'\r\nimport * as viz3Legend from './viz3-scripts/viz3-legend.js'\r\nimport * as viz3Tooltip from './viz3-scripts/viz3-tooltip.js'\r\nimport * as viz3Example from './viz3-scripts/viz3-example.js'\r\n\r\n\r\n/* Visualisation 4 - Importations */\r\n\r\nimport * as viz4Helper from './viz4-scripts/viz4-helper.js'\r\nimport * as viz4Search from './viz4-scripts/viz4-search.js'\r\nimport * as viz4Scales from './viz4-scripts/viz4-scales.js'\r\nimport * as viz4Process from './viz4-scripts/viz4-process.js'\r\nimport * as viz4Viz from './viz4-scripts/viz4-viz.js'\r\nimport * as viz4CheckBoxes from './viz4-scripts/viz4-checkboxes.js'\r\nimport * as viz4Tooltip from './viz4-scripts/viz4-tooltip.js'\r\n\r\n// import * as helper from './scripts/helper.js'\r\n// import * as preproc from './scripts/preprocess_imbd_data.js'\r\n// import * as viz from './scripts/viz.js'\r\n// import * as legend from './scripts/legend.js'\r\n// import * as hover from './scripts/hover.js'\r\n// import * as util from './scripts/util.js'\r\n\r\n// import * as d3Chromatic from 'd3-scale-chromatic'\r\n\r\n\r\n\r\n/* Déplacer le sélecteur de métrique en haut à droite si on le dépasse sur la page */\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const chooseMetric = document.querySelector(\".choose_metric\");\r\n  const offsetTop = chooseMetric.offsetTop + 650;\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n\r\n    if (window.scrollY > offsetTop) {\r\n      chooseMetric.classList.add(\"fixed\");\r\n    } else {\r\n      chooseMetric.classList.remove(\"fixed\");\r\n    }\r\n  });\r\n});\r\n\r\n(function (d3) {\r\n  // let bounds\r\n  // let svgSize\r\n  // let graphSize\r\n\r\n  // const margin = { top: 35, right: 200, bottom: 35, left: 200 }\r\n\r\n  // const xScale = d3.scaleBand().padding(0.05)\r\n  // const yScale = d3.scaleBand().padding(0.2)\r\n  // const colorScale = d3.scaleSequential(d3Chromatic.interpolateYlGnBu)\r\n\r\n  Promise.all([\r\n    d3.csv('./golden_globe_awards.csv', d3.autoType),\r\n    d3.csv('./IMDB_Top_250_Movies.csv', d3.autoType),\r\n    d3.csv('./movie_dataset.csv', d3.autoType),\r\n    d3.csv('./the_oscar_award.csv', d3.autoType)\r\n  ]).then(function ([goldenGlobes, imdb, movies, oscars]) {\r\n    imdb = processMovieData(imdb)\r\n    const maxYear = imdb.reduce((max, movie) => movie.year > max ? movie.year : max, Number.MIN_VALUE)\r\n\r\n    imdb.forEach(movie => {\r\n      if (movie.box_office && typeof movie.box_office !== 'string') movie.box_office = adjustForInflation(movie.box_office, movie.year, maxYear)\r\n      if (movie.budget && typeof movie.budget !== 'string') movie.budget = adjustForInflation(movie.budget, movie.year, maxYear)\r\n    })\r\n\r\n    const movieNames = imdb.reduce((acc, movie) => {\r\n      if (!movie.name) return acc\r\n\r\n      const nameStr = String(movie.name)\r\n      const cleanName = nameStr.toLowerCase().replace(/[^a-z0-9\\s]/g, '')\r\n\r\n      if (!acc.includes(cleanName) && cleanName.trim() !== '') acc.push(cleanName)\r\n      return acc\r\n    }, [])\r\n\r\n    const oscarMovies = getOscarsMovieData(oscars, movieNames)\r\n    imdb = addOscarsData(imdb, oscarMovies)\r\n\r\n    const goldenGlobesMovies = getGoldenGlobesMovieData(goldenGlobes, movieNames)\r\n    imdb = addGoldenGlobesData(imdb, goldenGlobesMovies)\r\n\r\n    const additionalMovieData = getAdditionalMovieData(movies, movieNames)\r\n    imdb = addAdditionalMovieData(imdb, additionalMovieData)\r\n    convertMovieNamesToString(imdb)\r\n\r\n    imdb = calculateMovieProfits(imdb)\r\n\r\n    const contributorData = getFilmContributorsData(imdb)\r\n    const genreIntervalData = getGenreDataIntervals(imdb)\r\n    const genreData = getMoviesByGenre(imdb)\r\n    const collaborationsData = getTopCollaborations(imdb)\r\n\r\n    const certificateData = getCertificateData(imdb)\r\n    const seasonalData = getDataBySeason(imdb)\r\n\r\n    const movieLengthData = getMovieLengthData(imdb)\r\n    const taglineWordData = getTaglineWordsData(imdb)\r\n    const taglineLengthData = getTaglineLengthData(imdb)\r\n\r\n\r\n    /* Visualisation 1 - Success scatter */\r\n\r\n    const margin1 = {\r\n      top: 75,\r\n      right: 260,\r\n      bottom: 100,\r\n      left: 80\r\n    }\r\n\r\n    let svgSize1, graphSize1\r\n\r\n    /**\r\n     *\r\n     */\r\n    function setSizing1() {\r\n      svgSize1 = {\r\n        width: 1000,\r\n        height: 600\r\n      }\r\n\r\n      graphSize1 = {\r\n        width: svgSize1.width - margin1.right - margin1.left,\r\n        height: svgSize1.height - margin1.bottom - margin1.top\r\n      }\r\n\r\n      viz1Helper.setCanvasSize(svgSize1.width, svgSize1.height)\r\n    }\r\n\r\n    setSizing1();\r\n\r\n    const svgViz1 = d3.select(\".success-scatter-svg\");\r\n    const g1 = viz1Helper.generateG(svgViz1, margin1, \"graph-g-viz1\")\r\n\r\n    const tip = d3Tip().attr('class', 'd3-tip').html(function (d) { return viz1Tooltip.getContents(d) })\r\n    g1.call(tip)\r\n\r\n    viz1Helper.appendAxes(g1)\r\n    viz1Helper.appendGraphLabels(g1)\r\n    viz1Helper.placeTitle(g1, graphSize1.width)\r\n\r\n    viz1Viz.positionLabels(g1, graphSize1.width, graphSize1.height)\r\n\r\n\r\n    const radiusScale1 = viz1Scales.setRadiusScale(imdb)\r\n    const colorScale1 = viz1Scales.setColorScale(imdb)\r\n    const xScale1 = viz1Scales.setXScale(graphSize1.width, imdb)\r\n    const yScale1 = viz1Scales.setYScale(graphSize1.height, imdb)\r\n\r\n    viz1Helper.drawXAxis(g1, xScale1, graphSize1.height)\r\n    viz1Helper.drawYAxis(g1, yScale1)\r\n\r\n    const flatData = Object.values(imdb).flat();\r\n    const years = flatData.map(d => d.year);\r\n    const minDate = d3.min(years);\r\n    const maxDate = d3.max(years);\r\n    viz1Legend.drawLegend(colorScale1, g1, graphSize1.width, graphSize1.height, minDate, maxDate)\r\n\r\n    build1(g1, imdb, 0, radiusScale1, colorScale1, xScale1, yScale1)\r\n\r\n    viz1Viz.setCircleHoverHandler(g1, tip)\r\n\r\n    /**\r\n     * This function builds the graph.\r\n    * @param {object} g1 The D3 selection of the <g> element containing the circles\r\n     * @param {object} data The data to be used\r\n    * @param {number} transitionDuration The duration of the transition while placing the circles\r\n    * @param {number} year The year to be displayed\r\n    * @param {*} rScale1 The scale for the circles' radius\r\n    * @param {*} colorScale1 The scale for the circles' color\r\n     * @param {*} xScale1 The x scale for the graph\r\n    * @param {*} yScale1 The y scale for the graph\r\n    */\r\n    function build1(g1, data, transitionDuration, rScale1, colorScale1, xScale1, yScale1) {\r\n      viz1Viz.drawCircles(g1, data, rScale1, colorScale1)\r\n      viz1Viz.moveCircles(g1, xScale1, yScale1, transitionDuration)\r\n    };\r\n\r\n\r\n    /* Visualisation 3 - Genres et tendances */\r\n\r\n\r\n    let metricViz3 = \"rating\"; // \"box_office\", \r\n    let selectedFilterViz3 = \"genre\";\r\n    let intervalLenght = 10;\r\n    let numElemPerStack = 4;\r\n\r\n\r\n    function buildViz3(metricViz3, selectedFilterViz3, intervalLenght, numElemPerStack) {\r\n\r\n      const viz3 = d3.select(\".tendance-timeline-svg\");\r\n      const legendDiv = d3.select(\".legend-tendances\");\r\n\r\n      // Clear previous content\r\n      viz3.selectAll(\".axes\").remove();\r\n      viz3.selectAll(\".bars\").remove();\r\n      legendDiv.selectAll(\"*\").remove();\r\n\r\n\r\n      // Preprocessing\r\n      const viz3Data = viz3Process.getDataPerTimeInterval(imdb, intervalLenght, metricViz3);  // if metric=\"rating\" et on prend des intervalles de temps de 8 années\r\n      const viz3MarketPerInterval = viz3Process.getMarketPerTimeInterval(viz3Data, selectedFilterViz3) //if selectedfilter = \"genre\"\r\n      const viz3MarketPerIntervalSmall = viz3Process.reduceNumberOfLine(viz3MarketPerInterval, numElemPerStack); //seulement 4 genres par intervalle\r\n      const intervalsDates = Object.keys(viz3MarketPerIntervalSmall[\"intervals\"]);\r\n      const stackedData = viz3Process.stackData(viz3MarketPerIntervalSmall);\r\n\r\n\r\n\r\n\r\n\r\n      // setup graph scales\r\n      const svgSizeViz3 = {\r\n        width: 1000,\r\n        height: 600\r\n      }\r\n      const marginViz3 = {\r\n        top: 40,\r\n        right: 40,\r\n        bottom: 60,\r\n        left: 100\r\n      }\r\n      const graphSizeViz3 = {\r\n        width: svgSizeViz3.width - marginViz3.right - marginViz3.left,\r\n        height: svgSizeViz3.height - marginViz3.bottom - marginViz3.top\r\n      }\r\n      viz3Helper.setCanvasSize(svgSizeViz3.width, svgSizeViz3.height);\r\n      const viz3xScale = viz3Scales.setXScale(graphSizeViz3.width, intervalsDates);\r\n      const viz3yScaleBoxOffice = viz3Scales.setYScale(graphSizeViz3.height);\r\n\r\n\r\n      const axesViz3 = viz3.append(\"g\").attr(\"class\", \"axes\")\r\n        .attr(\"transform\", `translate(${marginViz3.left},${marginViz3.top})`);\r\n\r\n\r\n\r\n      // Dessin des axes\r\n      viz3Helper.appendAxes(axesViz3);\r\n      viz3Helper.drawXAxis(viz3xScale, graphSizeViz3.height, intervalsDates);\r\n      viz3Helper.drawYAxis(viz3yScaleBoxOffice);\r\n\r\n\r\n      // Ajout des labels d'axes\r\n      viz3Helper.appendGraphLabels(axesViz3);\r\n      viz3Helper.positionLabels(axesViz3, graphSizeViz3.width, graphSizeViz3.height);\r\n\r\n\r\n      const customColors = [\r\n        \"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\",\r\n        \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\",\r\n        \"#393b79\", \"#637939\", \"#8c6d31\", \"#843c39\", \"#7b4173\",\r\n        \"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\",\r\n        \"#c49c94\", \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\"\r\n      ];\r\n      const colorScale = d3.scaleOrdinal()\r\n        .domain(viz3MarketPerIntervalSmall.presentCategory)\r\n        .range(customColors);\r\n\r\n\r\n      viz3Legend.createLegend(viz3MarketPerIntervalSmall, legendDiv, colorScale);\r\n\r\n\r\n      const g3 = viz3Helper.generateG(viz3, marginViz3, \"graph-g-viz3\")\r\n      const tip3 = d3Tip().attr('class', 'd3-tip').html(function (d) { return viz3Tooltip.getContents(d, colorScale) })\r\n      g3.call(tip3)\r\n\r\n      const series = d3.stack()\r\n        .keys(viz3MarketPerIntervalSmall.presentCategory)(stackedData);\r\n\r\n      // Créer un groupe de base où dessiner les barres\r\n      const barsGroup = viz3.append(\"g\")\r\n        .attr(\"class\", \"bars\")\r\n        .attr(\"transform\", `translate(${marginViz3.left},${marginViz3.top})`);\r\n\r\n      barsGroup.selectAll(\"g.layer\")\r\n        .data(series)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"layer\")\r\n        .attr(\"fill\", d => colorScale(d.key))\r\n        .selectAll(\"rect\")\r\n        .data(d => {\r\n          // On ajoute la catégorie à chaque élément\r\n          return d.map(item => ({\r\n            ...item,\r\n            category: d.key\r\n          }));\r\n        })\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr('class', 'rect3')\r\n        .attr(\"x\", d => viz3xScale(d.data.interval))\r\n        .attr(\"y\", d => viz3yScaleBoxOffice(d[1]))\r\n        .attr(\"height\", d => viz3yScaleBoxOffice(d[0]) - viz3yScaleBoxOffice(d[1]))\r\n        .attr(\"width\", viz3xScale.bandwidth())\r\n\r\n\r\n      // Hover d'un rectangle\r\n      viz3Tooltip.setRectHoverHandler(viz3, tip3)\r\n\r\n      // Exemple de lecture\r\n      const randomRectData = viz3Example.selectRandomRectangle();\r\n      const phraseEx = viz3Example.phraseExemple(randomRectData, colorScale);\r\n\r\n      const exampleContainerViz3 = document.querySelector(\".exampleViz3\");\r\n\r\n      exampleContainerViz3.innerHTML = phraseEx;\r\n\r\n      // const textElementViz3 = document.createElement(\"p\");\r\n      // textElementViz3.textContent = \"Exemple de lecture : \" + phraseEx;\r\n      // textElementViz3.classList.add(\"example-text\")\r\n      // textContainerViz3.appendChild(textElementViz3);\r\n\r\n    }\r\n\r\n    buildViz3(metricViz3, selectedFilterViz3, intervalLenght, numElemPerStack);\r\n\r\n\r\n\r\n\r\n    // Gérer les changements d'option :\r\n    const selectorMetric = document.getElementById('metric-select');\r\n    selectorMetric.addEventListener('change', () => {\r\n      buildViz3(selectorMetric.value, selectorCategory.value, parseInt(sliderMovieLenght.value, 10), parseInt(sliderMaxLine.value, 10));\r\n    });\r\n\r\n    const selectorCategory = document.getElementById('categorie-select');\r\n    selectorCategory.addEventListener('change', () => {\r\n      buildViz3(selectorMetric.value, selectorCategory.value, parseInt(sliderMovieLenght.value, 10), parseInt(sliderMaxLine.value, 10));\r\n    });\r\n\r\n\r\n    const sliderMovieLenght = document.getElementById('slider-movieLenght');\r\n    const sliderMovieLenghtValue = document.getElementById('slider-movieLenght-value');\r\n\r\n    sliderMovieLenght.addEventListener('input', () => {\r\n      sliderMovieLenghtValue.textContent = sliderMovieLenght.value;\r\n      buildViz3(selectorMetric.value, selectorCategory.value, parseInt(sliderMovieLenght.value, 10), parseInt(sliderMaxLine.value, 10));\r\n    });\r\n\r\n\r\n    const sliderMaxLine = document.getElementById('slider-maxLine');\r\n    const sliderMaxLineValue = document.getElementById('slider-maxLine-value');\r\n\r\n    sliderMaxLine.addEventListener('input', () => {\r\n      sliderMaxLineValue.textContent = sliderMaxLine.value;\r\n      buildViz3(selectorMetric.value, selectorCategory.value, parseInt(sliderMovieLenght.value, 10), parseInt(sliderMaxLine.value, 10));\r\n    });\r\n\r\n\r\n\r\n    /* Visualisation 4 - Impact des films */\r\n\r\n    const margin4 = {\r\n      top: 75,\r\n      right: 200,\r\n      bottom: 100,\r\n      left: 80\r\n    }\r\n\r\n    let svgSize4, graphSize4\r\n\r\n    function setSizing() {\r\n      svgSize4 = {\r\n        width: 1000,\r\n        height: 600\r\n      }\r\n\r\n      graphSize4 = {\r\n        width: svgSize4.width - margin4.right - margin4.left,\r\n        height: svgSize4.height - margin4.bottom - margin4.top\r\n      }\r\n\r\n      viz4Helper.setCanvasSize(svgSize4.width, svgSize4.height)\r\n    }\r\n\r\n    setSizing();\r\n\r\n    let title;\r\n    const ListOfFields = [\"directors\", \"genre\", \"casts\", \"writers\"];\r\n\r\n    let viz4FixedImdb = viz4Process.addNumberOfNominations(imdb)\r\n\r\n    let viz4xScale;\r\n    let viz4yScaleBoxOffice;\r\n    let viz4ColorScale;\r\n    \r\n    viz4CheckBoxes.generateCheckBoxes(ListOfFields);\r\n\r\n    const viz4 = d3.select(\".film-impact-svg\");\r\n    \r\n\r\n    buildViz4(viz4FixedImdb);\r\n    \r\n    function buildViz4(viz4data) {\r\n\r\n      viz4xScale = viz4Scales.setXScale(graphSize4.width, viz4data);\r\n      viz4yScaleBoxOffice = viz4Scales.setYScaleBO(graphSize4.height, viz4data);\r\n\r\n      const axes = viz4.append(\"g\").attr(\"class\", \"axes\")\r\n        .attr(\"transform\", 'translate(' + margin4.left + ', ' + margin4.top + ')');\r\n      const courbes = viz4.append(\"g\").attr(\"class\", \"courbes\")\r\n        .attr(\"transform\", 'translate(' + margin4.left + ', ' + margin4.top + ')');\r\n\r\n      viz4Helper.appendAxes(axes);\r\n      viz4Helper.appendGraphLabels(axes);\r\n      viz4Helper.positionLabels(axes, graphSize4.width, graphSize4.height);\r\n\r\n      viz4Helper.drawXAxis(viz4xScale, graphSize4.height);\r\n      viz4Helper.drawYAxis(viz4yScaleBoxOffice);\r\n\r\n      viz4Search.initFilmList(viz4data);\r\n    }\r\n\r\n  function refreshViz4 (viz4data, viz4mesureSucces) {\r\n      console.log(\"Changement\");\r\n\r\n      viz4CheckBoxes.checkAll();\r\n\r\n      const dataToShow = viz4Process.indexData(title, viz4data, viz4mesureSucces);\r\n\r\n      const test = viz4Process.generateDataToDisplay(title, dataToShow, ListOfFields, 2);\r\n      console.log(\"Test refresh : \", test);\r\n\r\n      const viz4yScaleFlexible = viz4Scales.setYScaleMesureSucces(graphSize4.height, test, \"average\");\r\n      viz4Helper.drawYAxis(viz4yScaleFlexible);\r\n      viz4ColorScale = viz4Scales.setColorScale(test);\r\n\r\n      console.log(viz4ColorScale);\r\n      viz4Viz.drawCircles(test, viz4xScale, viz4yScaleFlexible, viz4ColorScale, graphSize4.width);\r\n      \r\n      viz4Viz.drawRef(title, dataToShow, viz4xScale, viz4yScaleFlexible, graphSize4.height);\r\n\r\n      const tip4 = d3Tip().attr('class', 'viz4-tip').html(function (d) { return viz4Tooltip.getContents(d, viz4ColorScale) });\r\n      viz4.select(\".courbes\").call(tip4);\r\n      viz4Tooltip.setCircleHoverHandler(viz4.select(\".courbes\"), tip4);\r\n    }\r\n\r\n  selectorMetric.addEventListener('change', () => {\r\n     refreshViz4(viz4FixedImdb, selectorMetric.value);\r\n   });\r\n\r\n  document.addEventListener('viz4movieSelected', (e) => {\r\n    console.log(\"Received movie:\", e.detail.movie);\r\n    title = e.detail.movie;\r\n    const viz4MesureSucces = selectorMetric.value;\r\n    \r\n    refreshViz4(viz4FixedImdb, viz4MesureSucces);\r\n  });\r\n\r\n    // }, [])\r\n    // d3.csv('./golden_globe_awards.csv', d3.autoType).then(function (data) {\r\n    //   console.log(data)\r\n    //   const neighborhoodNames = preproc.getNeighborhoodNames(data)\r\n    //   data = preproc.filterYears(data, 2010, 2020)\r\n\r\n    //   data = preproc.summarizeYearlyCounts(data)\r\n    //   data = preproc.fillMissingData(data, neighborhoodNames, 2010, 2020, util.range)\r\n\r\n    // viz.setColorScaleDomain(colorScale, data)\r\n\r\n    // legend.initGradient(colorScale)\r\n    // legend.initLegendBar()\r\n    // legend.initLegendAxis()\r\n\r\n    // const g = helper.generateG(margin)\r\n\r\n    // helper.appendAxes(g)\r\n    // viz.appendRects(data)\r\n\r\n    // setSizing()\r\n    // build()\r\n\r\n    /**\r\n     *   This function handles the graph's sizing.\r\n     */\r\n    // function setSizing () {\r\n    //   bounds = d3.select('.graph').node().getBoundingClientRect()\r\n\r\n    //   svgSize = {\r\n    //     width: bounds.width,\r\n    //     height: 550\r\n    //   }\r\n\r\n    //   graphSize = {\r\n    //     width: svgSize.width - margin.right - margin.left,\r\n    //     height: svgSize.height - margin.bottom - margin.top\r\n    //   }\r\n\r\n    //   helper.setCanvasSize(svgSize.width, svgSize.height)\r\n    // }\r\n\r\n    /**\r\n     *   This function builds the graph.\r\n     */\r\n    // function build () {\r\n    //   viz.updateXScale(xScale, data, graphSize.width, util.range)\r\n    //   viz.updateYScale(yScale, neighborhoodNames, graphSize.height)\r\n\r\n    //   viz.drawXAxis(xScale)\r\n    //   viz.drawYAxis(yScale, graphSize.width)\r\n\r\n    //   viz.rotateYTicks()\r\n\r\n    //   viz.updateRects(xScale, yScale, colorScale)\r\n\r\n    //   hover.setRectHandler(xScale, yScale, hover.rectSelected, hover.rectUnselected, hover.selectTicks, hover.unselectTicks)\r\n\r\n    //   legend.draw(margin.left / 2, margin.top + 5, graphSize.height - 10, 15, 'url(#gradient)', colorScale)\r\n    // }\r\n\r\n    // window.addEventListener('resize', () => {\r\n    //   setSizing()\r\n    //   build()\r\n    // })\r\n  })\r\n})(d3)\r\n"]}